/*
Spartera API Documentation

Auto-generated API documentation for REST services of the Spartera platform

API version: 1.24.0
Contact: support@spartera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sparteraapi

import (
	"encoding/json"
	"time"
)

// checks if the AssetsUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetsUpdate{}

// AssetsUpdate Update schema for modifying Asset
type AssetsUpdate struct {
	UserId *string `json:"user_id,omitempty"`
	CompanyId *string `json:"company_id,omitempty"`
	ConnectionId *string `json:"connection_id,omitempty"`
	IndustryId *int64 `json:"industry_id,omitempty"`
	// Approval status for AI-generated assets
	ApprovalStatus *string `json:"approval_status,omitempty"`
	// User who approved this asset for marketplace
	ApprovedByUserId *string `json:"approved_by_user_id,omitempty"`
	// When this asset was approved for marketplace
	ApprovedAt *time.Time `json:"approved_at,omitempty"`
	Name *string `json:"name,omitempty"`
	Slug *string `json:"slug,omitempty"`
	Description *string `json:"description,omitempty"`
	// Enum type: Source
	Source *string `json:"source,omitempty"`
	// Enum type: AssetType
	AssetType *string `json:"asset_type,omitempty"`
	// Stores database table schema data including columns, types, and metadata
	AssetSchema map[string]interface{} `json:"asset_schema,omitempty"`
	Tags *string `json:"tags,omitempty"`
	SqlLogic *string `json:"sql_logic,omitempty"`
	SourceSchemaName *string `json:"source_schema_name,omitempty"`
	SourceTableName *string `json:"source_table_name,omitempty"`
	SellInMarketplace *bool `json:"sell_in_marketplace,omitempty"`
	// Enum type: PlottingLibrary
	VizChartLibrary *string `json:"viz_chart_library,omitempty"`
	// Enum type: ChartType
	VizChartType *string `json:"viz_chart_type,omitempty"`
	VizDepVarColName *string `json:"viz_dep_var_col_name,omitempty"`
	VizIndepVarColName *string `json:"viz_indep_var_col_name,omitempty"`
	VizSizeColName *string `json:"viz_size_col_name,omitempty"`
	VizColorColName *string `json:"viz_color_col_name,omitempty"`
	// Enum type: AggregationType
	VizDataAggregation *string `json:"viz_data_aggregation,omitempty"`
	// Enum type: SortDirection
	VizSortDirection *string `json:"viz_sort_direction,omitempty"`
	VizDataLimit *int64 `json:"viz_data_limit,omitempty"`
	// Enum type: ColorScheme
	VizColorScheme *string `json:"viz_color_scheme,omitempty"`
	AllowParams *bool `json:"allow_params,omitempty"`
	AcceptTerms *bool `json:"accept_terms,omitempty"`
	Cached *bool `json:"cached,omitempty"`
	Schedule *string `json:"schedule,omitempty"`
	NextRun *time.Time `json:"next_run,omitempty"`
	// Start date of the data time period covered
	DataTimePeriodStart *time.Time `json:"data_time_period_start,omitempty"`
	// End date of the data time period covered
	DataTimePeriodEnd *time.Time `json:"data_time_period_end,omitempty"`
	// Type of geographic coverage (Enum type: GeographicCoverage)
	GeographicCoverageType *string `json:"geographic_coverage_type,omitempty"`
	// Specific regions/countries covered (e.g., 'United States, Canada, Mexico')
	GeographicCoverageDetails *string `json:"geographic_coverage_details,omitempty"`
	// How often the source data is refreshed (Enum type: DataRefreshFrequency)
	DataSourceRefreshFrequency *string `json:"data_source_refresh_frequency,omitempty"`
	// When the source data was last refreshed
	DataSourceLastRefreshed *time.Time `json:"data_source_last_refreshed,omitempty"`
}

// NewAssetsUpdate instantiates a new AssetsUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetsUpdate() *AssetsUpdate {
	this := AssetsUpdate{}
	return &this
}

// NewAssetsUpdateWithDefaults instantiates a new AssetsUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetsUpdateWithDefaults() *AssetsUpdate {
	this := AssetsUpdate{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AssetsUpdate) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AssetsUpdate) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *AssetsUpdate) SetUserId(v string) {
	o.UserId = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *AssetsUpdate) GetCompanyId() string {
	if o == nil || IsNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetCompanyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *AssetsUpdate) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *AssetsUpdate) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *AssetsUpdate) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *AssetsUpdate) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *AssetsUpdate) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetIndustryId returns the IndustryId field value if set, zero value otherwise.
func (o *AssetsUpdate) GetIndustryId() int64 {
	if o == nil || IsNil(o.IndustryId) {
		var ret int64
		return ret
	}
	return *o.IndustryId
}

// GetIndustryIdOk returns a tuple with the IndustryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetIndustryIdOk() (*int64, bool) {
	if o == nil || IsNil(o.IndustryId) {
		return nil, false
	}
	return o.IndustryId, true
}

// HasIndustryId returns a boolean if a field has been set.
func (o *AssetsUpdate) HasIndustryId() bool {
	if o != nil && !IsNil(o.IndustryId) {
		return true
	}

	return false
}

// SetIndustryId gets a reference to the given int64 and assigns it to the IndustryId field.
func (o *AssetsUpdate) SetIndustryId(v int64) {
	o.IndustryId = &v
}

// GetApprovalStatus returns the ApprovalStatus field value if set, zero value otherwise.
func (o *AssetsUpdate) GetApprovalStatus() string {
	if o == nil || IsNil(o.ApprovalStatus) {
		var ret string
		return ret
	}
	return *o.ApprovalStatus
}

// GetApprovalStatusOk returns a tuple with the ApprovalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetApprovalStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalStatus) {
		return nil, false
	}
	return o.ApprovalStatus, true
}

// HasApprovalStatus returns a boolean if a field has been set.
func (o *AssetsUpdate) HasApprovalStatus() bool {
	if o != nil && !IsNil(o.ApprovalStatus) {
		return true
	}

	return false
}

// SetApprovalStatus gets a reference to the given string and assigns it to the ApprovalStatus field.
func (o *AssetsUpdate) SetApprovalStatus(v string) {
	o.ApprovalStatus = &v
}

// GetApprovedByUserId returns the ApprovedByUserId field value if set, zero value otherwise.
func (o *AssetsUpdate) GetApprovedByUserId() string {
	if o == nil || IsNil(o.ApprovedByUserId) {
		var ret string
		return ret
	}
	return *o.ApprovedByUserId
}

// GetApprovedByUserIdOk returns a tuple with the ApprovedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetApprovedByUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovedByUserId) {
		return nil, false
	}
	return o.ApprovedByUserId, true
}

// HasApprovedByUserId returns a boolean if a field has been set.
func (o *AssetsUpdate) HasApprovedByUserId() bool {
	if o != nil && !IsNil(o.ApprovedByUserId) {
		return true
	}

	return false
}

// SetApprovedByUserId gets a reference to the given string and assigns it to the ApprovedByUserId field.
func (o *AssetsUpdate) SetApprovedByUserId(v string) {
	o.ApprovedByUserId = &v
}

// GetApprovedAt returns the ApprovedAt field value if set, zero value otherwise.
func (o *AssetsUpdate) GetApprovedAt() time.Time {
	if o == nil || IsNil(o.ApprovedAt) {
		var ret time.Time
		return ret
	}
	return *o.ApprovedAt
}

// GetApprovedAtOk returns a tuple with the ApprovedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetApprovedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ApprovedAt) {
		return nil, false
	}
	return o.ApprovedAt, true
}

// HasApprovedAt returns a boolean if a field has been set.
func (o *AssetsUpdate) HasApprovedAt() bool {
	if o != nil && !IsNil(o.ApprovedAt) {
		return true
	}

	return false
}

// SetApprovedAt gets a reference to the given time.Time and assigns it to the ApprovedAt field.
func (o *AssetsUpdate) SetApprovedAt(v time.Time) {
	o.ApprovedAt = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AssetsUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AssetsUpdate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AssetsUpdate) SetName(v string) {
	o.Name = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *AssetsUpdate) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *AssetsUpdate) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *AssetsUpdate) SetSlug(v string) {
	o.Slug = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AssetsUpdate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AssetsUpdate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AssetsUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *AssetsUpdate) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *AssetsUpdate) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *AssetsUpdate) SetSource(v string) {
	o.Source = &v
}

// GetAssetType returns the AssetType field value if set, zero value otherwise.
func (o *AssetsUpdate) GetAssetType() string {
	if o == nil || IsNil(o.AssetType) {
		var ret string
		return ret
	}
	return *o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetAssetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AssetType) {
		return nil, false
	}
	return o.AssetType, true
}

// HasAssetType returns a boolean if a field has been set.
func (o *AssetsUpdate) HasAssetType() bool {
	if o != nil && !IsNil(o.AssetType) {
		return true
	}

	return false
}

// SetAssetType gets a reference to the given string and assigns it to the AssetType field.
func (o *AssetsUpdate) SetAssetType(v string) {
	o.AssetType = &v
}

// GetAssetSchema returns the AssetSchema field value if set, zero value otherwise.
func (o *AssetsUpdate) GetAssetSchema() map[string]interface{} {
	if o == nil || IsNil(o.AssetSchema) {
		var ret map[string]interface{}
		return ret
	}
	return o.AssetSchema
}

// GetAssetSchemaOk returns a tuple with the AssetSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetAssetSchemaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AssetSchema) {
		return map[string]interface{}{}, false
	}
	return o.AssetSchema, true
}

// HasAssetSchema returns a boolean if a field has been set.
func (o *AssetsUpdate) HasAssetSchema() bool {
	if o != nil && !IsNil(o.AssetSchema) {
		return true
	}

	return false
}

// SetAssetSchema gets a reference to the given map[string]interface{} and assigns it to the AssetSchema field.
func (o *AssetsUpdate) SetAssetSchema(v map[string]interface{}) {
	o.AssetSchema = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AssetsUpdate) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AssetsUpdate) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *AssetsUpdate) SetTags(v string) {
	o.Tags = &v
}

// GetSqlLogic returns the SqlLogic field value if set, zero value otherwise.
func (o *AssetsUpdate) GetSqlLogic() string {
	if o == nil || IsNil(o.SqlLogic) {
		var ret string
		return ret
	}
	return *o.SqlLogic
}

// GetSqlLogicOk returns a tuple with the SqlLogic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetSqlLogicOk() (*string, bool) {
	if o == nil || IsNil(o.SqlLogic) {
		return nil, false
	}
	return o.SqlLogic, true
}

// HasSqlLogic returns a boolean if a field has been set.
func (o *AssetsUpdate) HasSqlLogic() bool {
	if o != nil && !IsNil(o.SqlLogic) {
		return true
	}

	return false
}

// SetSqlLogic gets a reference to the given string and assigns it to the SqlLogic field.
func (o *AssetsUpdate) SetSqlLogic(v string) {
	o.SqlLogic = &v
}

// GetSourceSchemaName returns the SourceSchemaName field value if set, zero value otherwise.
func (o *AssetsUpdate) GetSourceSchemaName() string {
	if o == nil || IsNil(o.SourceSchemaName) {
		var ret string
		return ret
	}
	return *o.SourceSchemaName
}

// GetSourceSchemaNameOk returns a tuple with the SourceSchemaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetSourceSchemaNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceSchemaName) {
		return nil, false
	}
	return o.SourceSchemaName, true
}

// HasSourceSchemaName returns a boolean if a field has been set.
func (o *AssetsUpdate) HasSourceSchemaName() bool {
	if o != nil && !IsNil(o.SourceSchemaName) {
		return true
	}

	return false
}

// SetSourceSchemaName gets a reference to the given string and assigns it to the SourceSchemaName field.
func (o *AssetsUpdate) SetSourceSchemaName(v string) {
	o.SourceSchemaName = &v
}

// GetSourceTableName returns the SourceTableName field value if set, zero value otherwise.
func (o *AssetsUpdate) GetSourceTableName() string {
	if o == nil || IsNil(o.SourceTableName) {
		var ret string
		return ret
	}
	return *o.SourceTableName
}

// GetSourceTableNameOk returns a tuple with the SourceTableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetSourceTableNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceTableName) {
		return nil, false
	}
	return o.SourceTableName, true
}

// HasSourceTableName returns a boolean if a field has been set.
func (o *AssetsUpdate) HasSourceTableName() bool {
	if o != nil && !IsNil(o.SourceTableName) {
		return true
	}

	return false
}

// SetSourceTableName gets a reference to the given string and assigns it to the SourceTableName field.
func (o *AssetsUpdate) SetSourceTableName(v string) {
	o.SourceTableName = &v
}

// GetSellInMarketplace returns the SellInMarketplace field value if set, zero value otherwise.
func (o *AssetsUpdate) GetSellInMarketplace() bool {
	if o == nil || IsNil(o.SellInMarketplace) {
		var ret bool
		return ret
	}
	return *o.SellInMarketplace
}

// GetSellInMarketplaceOk returns a tuple with the SellInMarketplace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetSellInMarketplaceOk() (*bool, bool) {
	if o == nil || IsNil(o.SellInMarketplace) {
		return nil, false
	}
	return o.SellInMarketplace, true
}

// HasSellInMarketplace returns a boolean if a field has been set.
func (o *AssetsUpdate) HasSellInMarketplace() bool {
	if o != nil && !IsNil(o.SellInMarketplace) {
		return true
	}

	return false
}

// SetSellInMarketplace gets a reference to the given bool and assigns it to the SellInMarketplace field.
func (o *AssetsUpdate) SetSellInMarketplace(v bool) {
	o.SellInMarketplace = &v
}

// GetVizChartLibrary returns the VizChartLibrary field value if set, zero value otherwise.
func (o *AssetsUpdate) GetVizChartLibrary() string {
	if o == nil || IsNil(o.VizChartLibrary) {
		var ret string
		return ret
	}
	return *o.VizChartLibrary
}

// GetVizChartLibraryOk returns a tuple with the VizChartLibrary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetVizChartLibraryOk() (*string, bool) {
	if o == nil || IsNil(o.VizChartLibrary) {
		return nil, false
	}
	return o.VizChartLibrary, true
}

// HasVizChartLibrary returns a boolean if a field has been set.
func (o *AssetsUpdate) HasVizChartLibrary() bool {
	if o != nil && !IsNil(o.VizChartLibrary) {
		return true
	}

	return false
}

// SetVizChartLibrary gets a reference to the given string and assigns it to the VizChartLibrary field.
func (o *AssetsUpdate) SetVizChartLibrary(v string) {
	o.VizChartLibrary = &v
}

// GetVizChartType returns the VizChartType field value if set, zero value otherwise.
func (o *AssetsUpdate) GetVizChartType() string {
	if o == nil || IsNil(o.VizChartType) {
		var ret string
		return ret
	}
	return *o.VizChartType
}

// GetVizChartTypeOk returns a tuple with the VizChartType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetVizChartTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VizChartType) {
		return nil, false
	}
	return o.VizChartType, true
}

// HasVizChartType returns a boolean if a field has been set.
func (o *AssetsUpdate) HasVizChartType() bool {
	if o != nil && !IsNil(o.VizChartType) {
		return true
	}

	return false
}

// SetVizChartType gets a reference to the given string and assigns it to the VizChartType field.
func (o *AssetsUpdate) SetVizChartType(v string) {
	o.VizChartType = &v
}

// GetVizDepVarColName returns the VizDepVarColName field value if set, zero value otherwise.
func (o *AssetsUpdate) GetVizDepVarColName() string {
	if o == nil || IsNil(o.VizDepVarColName) {
		var ret string
		return ret
	}
	return *o.VizDepVarColName
}

// GetVizDepVarColNameOk returns a tuple with the VizDepVarColName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetVizDepVarColNameOk() (*string, bool) {
	if o == nil || IsNil(o.VizDepVarColName) {
		return nil, false
	}
	return o.VizDepVarColName, true
}

// HasVizDepVarColName returns a boolean if a field has been set.
func (o *AssetsUpdate) HasVizDepVarColName() bool {
	if o != nil && !IsNil(o.VizDepVarColName) {
		return true
	}

	return false
}

// SetVizDepVarColName gets a reference to the given string and assigns it to the VizDepVarColName field.
func (o *AssetsUpdate) SetVizDepVarColName(v string) {
	o.VizDepVarColName = &v
}

// GetVizIndepVarColName returns the VizIndepVarColName field value if set, zero value otherwise.
func (o *AssetsUpdate) GetVizIndepVarColName() string {
	if o == nil || IsNil(o.VizIndepVarColName) {
		var ret string
		return ret
	}
	return *o.VizIndepVarColName
}

// GetVizIndepVarColNameOk returns a tuple with the VizIndepVarColName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetVizIndepVarColNameOk() (*string, bool) {
	if o == nil || IsNil(o.VizIndepVarColName) {
		return nil, false
	}
	return o.VizIndepVarColName, true
}

// HasVizIndepVarColName returns a boolean if a field has been set.
func (o *AssetsUpdate) HasVizIndepVarColName() bool {
	if o != nil && !IsNil(o.VizIndepVarColName) {
		return true
	}

	return false
}

// SetVizIndepVarColName gets a reference to the given string and assigns it to the VizIndepVarColName field.
func (o *AssetsUpdate) SetVizIndepVarColName(v string) {
	o.VizIndepVarColName = &v
}

// GetVizSizeColName returns the VizSizeColName field value if set, zero value otherwise.
func (o *AssetsUpdate) GetVizSizeColName() string {
	if o == nil || IsNil(o.VizSizeColName) {
		var ret string
		return ret
	}
	return *o.VizSizeColName
}

// GetVizSizeColNameOk returns a tuple with the VizSizeColName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetVizSizeColNameOk() (*string, bool) {
	if o == nil || IsNil(o.VizSizeColName) {
		return nil, false
	}
	return o.VizSizeColName, true
}

// HasVizSizeColName returns a boolean if a field has been set.
func (o *AssetsUpdate) HasVizSizeColName() bool {
	if o != nil && !IsNil(o.VizSizeColName) {
		return true
	}

	return false
}

// SetVizSizeColName gets a reference to the given string and assigns it to the VizSizeColName field.
func (o *AssetsUpdate) SetVizSizeColName(v string) {
	o.VizSizeColName = &v
}

// GetVizColorColName returns the VizColorColName field value if set, zero value otherwise.
func (o *AssetsUpdate) GetVizColorColName() string {
	if o == nil || IsNil(o.VizColorColName) {
		var ret string
		return ret
	}
	return *o.VizColorColName
}

// GetVizColorColNameOk returns a tuple with the VizColorColName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetVizColorColNameOk() (*string, bool) {
	if o == nil || IsNil(o.VizColorColName) {
		return nil, false
	}
	return o.VizColorColName, true
}

// HasVizColorColName returns a boolean if a field has been set.
func (o *AssetsUpdate) HasVizColorColName() bool {
	if o != nil && !IsNil(o.VizColorColName) {
		return true
	}

	return false
}

// SetVizColorColName gets a reference to the given string and assigns it to the VizColorColName field.
func (o *AssetsUpdate) SetVizColorColName(v string) {
	o.VizColorColName = &v
}

// GetVizDataAggregation returns the VizDataAggregation field value if set, zero value otherwise.
func (o *AssetsUpdate) GetVizDataAggregation() string {
	if o == nil || IsNil(o.VizDataAggregation) {
		var ret string
		return ret
	}
	return *o.VizDataAggregation
}

// GetVizDataAggregationOk returns a tuple with the VizDataAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetVizDataAggregationOk() (*string, bool) {
	if o == nil || IsNil(o.VizDataAggregation) {
		return nil, false
	}
	return o.VizDataAggregation, true
}

// HasVizDataAggregation returns a boolean if a field has been set.
func (o *AssetsUpdate) HasVizDataAggregation() bool {
	if o != nil && !IsNil(o.VizDataAggregation) {
		return true
	}

	return false
}

// SetVizDataAggregation gets a reference to the given string and assigns it to the VizDataAggregation field.
func (o *AssetsUpdate) SetVizDataAggregation(v string) {
	o.VizDataAggregation = &v
}

// GetVizSortDirection returns the VizSortDirection field value if set, zero value otherwise.
func (o *AssetsUpdate) GetVizSortDirection() string {
	if o == nil || IsNil(o.VizSortDirection) {
		var ret string
		return ret
	}
	return *o.VizSortDirection
}

// GetVizSortDirectionOk returns a tuple with the VizSortDirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetVizSortDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.VizSortDirection) {
		return nil, false
	}
	return o.VizSortDirection, true
}

// HasVizSortDirection returns a boolean if a field has been set.
func (o *AssetsUpdate) HasVizSortDirection() bool {
	if o != nil && !IsNil(o.VizSortDirection) {
		return true
	}

	return false
}

// SetVizSortDirection gets a reference to the given string and assigns it to the VizSortDirection field.
func (o *AssetsUpdate) SetVizSortDirection(v string) {
	o.VizSortDirection = &v
}

// GetVizDataLimit returns the VizDataLimit field value if set, zero value otherwise.
func (o *AssetsUpdate) GetVizDataLimit() int64 {
	if o == nil || IsNil(o.VizDataLimit) {
		var ret int64
		return ret
	}
	return *o.VizDataLimit
}

// GetVizDataLimitOk returns a tuple with the VizDataLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetVizDataLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.VizDataLimit) {
		return nil, false
	}
	return o.VizDataLimit, true
}

// HasVizDataLimit returns a boolean if a field has been set.
func (o *AssetsUpdate) HasVizDataLimit() bool {
	if o != nil && !IsNil(o.VizDataLimit) {
		return true
	}

	return false
}

// SetVizDataLimit gets a reference to the given int64 and assigns it to the VizDataLimit field.
func (o *AssetsUpdate) SetVizDataLimit(v int64) {
	o.VizDataLimit = &v
}

// GetVizColorScheme returns the VizColorScheme field value if set, zero value otherwise.
func (o *AssetsUpdate) GetVizColorScheme() string {
	if o == nil || IsNil(o.VizColorScheme) {
		var ret string
		return ret
	}
	return *o.VizColorScheme
}

// GetVizColorSchemeOk returns a tuple with the VizColorScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetVizColorSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.VizColorScheme) {
		return nil, false
	}
	return o.VizColorScheme, true
}

// HasVizColorScheme returns a boolean if a field has been set.
func (o *AssetsUpdate) HasVizColorScheme() bool {
	if o != nil && !IsNil(o.VizColorScheme) {
		return true
	}

	return false
}

// SetVizColorScheme gets a reference to the given string and assigns it to the VizColorScheme field.
func (o *AssetsUpdate) SetVizColorScheme(v string) {
	o.VizColorScheme = &v
}

// GetAllowParams returns the AllowParams field value if set, zero value otherwise.
func (o *AssetsUpdate) GetAllowParams() bool {
	if o == nil || IsNil(o.AllowParams) {
		var ret bool
		return ret
	}
	return *o.AllowParams
}

// GetAllowParamsOk returns a tuple with the AllowParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetAllowParamsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowParams) {
		return nil, false
	}
	return o.AllowParams, true
}

// HasAllowParams returns a boolean if a field has been set.
func (o *AssetsUpdate) HasAllowParams() bool {
	if o != nil && !IsNil(o.AllowParams) {
		return true
	}

	return false
}

// SetAllowParams gets a reference to the given bool and assigns it to the AllowParams field.
func (o *AssetsUpdate) SetAllowParams(v bool) {
	o.AllowParams = &v
}

// GetAcceptTerms returns the AcceptTerms field value if set, zero value otherwise.
func (o *AssetsUpdate) GetAcceptTerms() bool {
	if o == nil || IsNil(o.AcceptTerms) {
		var ret bool
		return ret
	}
	return *o.AcceptTerms
}

// GetAcceptTermsOk returns a tuple with the AcceptTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetAcceptTermsOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptTerms) {
		return nil, false
	}
	return o.AcceptTerms, true
}

// HasAcceptTerms returns a boolean if a field has been set.
func (o *AssetsUpdate) HasAcceptTerms() bool {
	if o != nil && !IsNil(o.AcceptTerms) {
		return true
	}

	return false
}

// SetAcceptTerms gets a reference to the given bool and assigns it to the AcceptTerms field.
func (o *AssetsUpdate) SetAcceptTerms(v bool) {
	o.AcceptTerms = &v
}

// GetCached returns the Cached field value if set, zero value otherwise.
func (o *AssetsUpdate) GetCached() bool {
	if o == nil || IsNil(o.Cached) {
		var ret bool
		return ret
	}
	return *o.Cached
}

// GetCachedOk returns a tuple with the Cached field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetCachedOk() (*bool, bool) {
	if o == nil || IsNil(o.Cached) {
		return nil, false
	}
	return o.Cached, true
}

// HasCached returns a boolean if a field has been set.
func (o *AssetsUpdate) HasCached() bool {
	if o != nil && !IsNil(o.Cached) {
		return true
	}

	return false
}

// SetCached gets a reference to the given bool and assigns it to the Cached field.
func (o *AssetsUpdate) SetCached(v bool) {
	o.Cached = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *AssetsUpdate) GetSchedule() string {
	if o == nil || IsNil(o.Schedule) {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *AssetsUpdate) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *AssetsUpdate) SetSchedule(v string) {
	o.Schedule = &v
}

// GetNextRun returns the NextRun field value if set, zero value otherwise.
func (o *AssetsUpdate) GetNextRun() time.Time {
	if o == nil || IsNil(o.NextRun) {
		var ret time.Time
		return ret
	}
	return *o.NextRun
}

// GetNextRunOk returns a tuple with the NextRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetNextRunOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextRun) {
		return nil, false
	}
	return o.NextRun, true
}

// HasNextRun returns a boolean if a field has been set.
func (o *AssetsUpdate) HasNextRun() bool {
	if o != nil && !IsNil(o.NextRun) {
		return true
	}

	return false
}

// SetNextRun gets a reference to the given time.Time and assigns it to the NextRun field.
func (o *AssetsUpdate) SetNextRun(v time.Time) {
	o.NextRun = &v
}

// GetDataTimePeriodStart returns the DataTimePeriodStart field value if set, zero value otherwise.
func (o *AssetsUpdate) GetDataTimePeriodStart() time.Time {
	if o == nil || IsNil(o.DataTimePeriodStart) {
		var ret time.Time
		return ret
	}
	return *o.DataTimePeriodStart
}

// GetDataTimePeriodStartOk returns a tuple with the DataTimePeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetDataTimePeriodStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DataTimePeriodStart) {
		return nil, false
	}
	return o.DataTimePeriodStart, true
}

// HasDataTimePeriodStart returns a boolean if a field has been set.
func (o *AssetsUpdate) HasDataTimePeriodStart() bool {
	if o != nil && !IsNil(o.DataTimePeriodStart) {
		return true
	}

	return false
}

// SetDataTimePeriodStart gets a reference to the given time.Time and assigns it to the DataTimePeriodStart field.
func (o *AssetsUpdate) SetDataTimePeriodStart(v time.Time) {
	o.DataTimePeriodStart = &v
}

// GetDataTimePeriodEnd returns the DataTimePeriodEnd field value if set, zero value otherwise.
func (o *AssetsUpdate) GetDataTimePeriodEnd() time.Time {
	if o == nil || IsNil(o.DataTimePeriodEnd) {
		var ret time.Time
		return ret
	}
	return *o.DataTimePeriodEnd
}

// GetDataTimePeriodEndOk returns a tuple with the DataTimePeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetDataTimePeriodEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DataTimePeriodEnd) {
		return nil, false
	}
	return o.DataTimePeriodEnd, true
}

// HasDataTimePeriodEnd returns a boolean if a field has been set.
func (o *AssetsUpdate) HasDataTimePeriodEnd() bool {
	if o != nil && !IsNil(o.DataTimePeriodEnd) {
		return true
	}

	return false
}

// SetDataTimePeriodEnd gets a reference to the given time.Time and assigns it to the DataTimePeriodEnd field.
func (o *AssetsUpdate) SetDataTimePeriodEnd(v time.Time) {
	o.DataTimePeriodEnd = &v
}

// GetGeographicCoverageType returns the GeographicCoverageType field value if set, zero value otherwise.
func (o *AssetsUpdate) GetGeographicCoverageType() string {
	if o == nil || IsNil(o.GeographicCoverageType) {
		var ret string
		return ret
	}
	return *o.GeographicCoverageType
}

// GetGeographicCoverageTypeOk returns a tuple with the GeographicCoverageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetGeographicCoverageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GeographicCoverageType) {
		return nil, false
	}
	return o.GeographicCoverageType, true
}

// HasGeographicCoverageType returns a boolean if a field has been set.
func (o *AssetsUpdate) HasGeographicCoverageType() bool {
	if o != nil && !IsNil(o.GeographicCoverageType) {
		return true
	}

	return false
}

// SetGeographicCoverageType gets a reference to the given string and assigns it to the GeographicCoverageType field.
func (o *AssetsUpdate) SetGeographicCoverageType(v string) {
	o.GeographicCoverageType = &v
}

// GetGeographicCoverageDetails returns the GeographicCoverageDetails field value if set, zero value otherwise.
func (o *AssetsUpdate) GetGeographicCoverageDetails() string {
	if o == nil || IsNil(o.GeographicCoverageDetails) {
		var ret string
		return ret
	}
	return *o.GeographicCoverageDetails
}

// GetGeographicCoverageDetailsOk returns a tuple with the GeographicCoverageDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetGeographicCoverageDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.GeographicCoverageDetails) {
		return nil, false
	}
	return o.GeographicCoverageDetails, true
}

// HasGeographicCoverageDetails returns a boolean if a field has been set.
func (o *AssetsUpdate) HasGeographicCoverageDetails() bool {
	if o != nil && !IsNil(o.GeographicCoverageDetails) {
		return true
	}

	return false
}

// SetGeographicCoverageDetails gets a reference to the given string and assigns it to the GeographicCoverageDetails field.
func (o *AssetsUpdate) SetGeographicCoverageDetails(v string) {
	o.GeographicCoverageDetails = &v
}

// GetDataSourceRefreshFrequency returns the DataSourceRefreshFrequency field value if set, zero value otherwise.
func (o *AssetsUpdate) GetDataSourceRefreshFrequency() string {
	if o == nil || IsNil(o.DataSourceRefreshFrequency) {
		var ret string
		return ret
	}
	return *o.DataSourceRefreshFrequency
}

// GetDataSourceRefreshFrequencyOk returns a tuple with the DataSourceRefreshFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetDataSourceRefreshFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.DataSourceRefreshFrequency) {
		return nil, false
	}
	return o.DataSourceRefreshFrequency, true
}

// HasDataSourceRefreshFrequency returns a boolean if a field has been set.
func (o *AssetsUpdate) HasDataSourceRefreshFrequency() bool {
	if o != nil && !IsNil(o.DataSourceRefreshFrequency) {
		return true
	}

	return false
}

// SetDataSourceRefreshFrequency gets a reference to the given string and assigns it to the DataSourceRefreshFrequency field.
func (o *AssetsUpdate) SetDataSourceRefreshFrequency(v string) {
	o.DataSourceRefreshFrequency = &v
}

// GetDataSourceLastRefreshed returns the DataSourceLastRefreshed field value if set, zero value otherwise.
func (o *AssetsUpdate) GetDataSourceLastRefreshed() time.Time {
	if o == nil || IsNil(o.DataSourceLastRefreshed) {
		var ret time.Time
		return ret
	}
	return *o.DataSourceLastRefreshed
}

// GetDataSourceLastRefreshedOk returns a tuple with the DataSourceLastRefreshed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetsUpdate) GetDataSourceLastRefreshedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DataSourceLastRefreshed) {
		return nil, false
	}
	return o.DataSourceLastRefreshed, true
}

// HasDataSourceLastRefreshed returns a boolean if a field has been set.
func (o *AssetsUpdate) HasDataSourceLastRefreshed() bool {
	if o != nil && !IsNil(o.DataSourceLastRefreshed) {
		return true
	}

	return false
}

// SetDataSourceLastRefreshed gets a reference to the given time.Time and assigns it to the DataSourceLastRefreshed field.
func (o *AssetsUpdate) SetDataSourceLastRefreshed(v time.Time) {
	o.DataSourceLastRefreshed = &v
}

func (o AssetsUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetsUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.IndustryId) {
		toSerialize["industry_id"] = o.IndustryId
	}
	if !IsNil(o.ApprovalStatus) {
		toSerialize["approval_status"] = o.ApprovalStatus
	}
	if !IsNil(o.ApprovedByUserId) {
		toSerialize["approved_by_user_id"] = o.ApprovedByUserId
	}
	if !IsNil(o.ApprovedAt) {
		toSerialize["approved_at"] = o.ApprovedAt
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.AssetType) {
		toSerialize["asset_type"] = o.AssetType
	}
	if !IsNil(o.AssetSchema) {
		toSerialize["asset_schema"] = o.AssetSchema
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.SqlLogic) {
		toSerialize["sql_logic"] = o.SqlLogic
	}
	if !IsNil(o.SourceSchemaName) {
		toSerialize["source_schema_name"] = o.SourceSchemaName
	}
	if !IsNil(o.SourceTableName) {
		toSerialize["source_table_name"] = o.SourceTableName
	}
	if !IsNil(o.SellInMarketplace) {
		toSerialize["sell_in_marketplace"] = o.SellInMarketplace
	}
	if !IsNil(o.VizChartLibrary) {
		toSerialize["viz_chart_library"] = o.VizChartLibrary
	}
	if !IsNil(o.VizChartType) {
		toSerialize["viz_chart_type"] = o.VizChartType
	}
	if !IsNil(o.VizDepVarColName) {
		toSerialize["viz_dep_var_col_name"] = o.VizDepVarColName
	}
	if !IsNil(o.VizIndepVarColName) {
		toSerialize["viz_indep_var_col_name"] = o.VizIndepVarColName
	}
	if !IsNil(o.VizSizeColName) {
		toSerialize["viz_size_col_name"] = o.VizSizeColName
	}
	if !IsNil(o.VizColorColName) {
		toSerialize["viz_color_col_name"] = o.VizColorColName
	}
	if !IsNil(o.VizDataAggregation) {
		toSerialize["viz_data_aggregation"] = o.VizDataAggregation
	}
	if !IsNil(o.VizSortDirection) {
		toSerialize["viz_sort_direction"] = o.VizSortDirection
	}
	if !IsNil(o.VizDataLimit) {
		toSerialize["viz_data_limit"] = o.VizDataLimit
	}
	if !IsNil(o.VizColorScheme) {
		toSerialize["viz_color_scheme"] = o.VizColorScheme
	}
	if !IsNil(o.AllowParams) {
		toSerialize["allow_params"] = o.AllowParams
	}
	if !IsNil(o.AcceptTerms) {
		toSerialize["accept_terms"] = o.AcceptTerms
	}
	if !IsNil(o.Cached) {
		toSerialize["cached"] = o.Cached
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.NextRun) {
		toSerialize["next_run"] = o.NextRun
	}
	if !IsNil(o.DataTimePeriodStart) {
		toSerialize["data_time_period_start"] = o.DataTimePeriodStart
	}
	if !IsNil(o.DataTimePeriodEnd) {
		toSerialize["data_time_period_end"] = o.DataTimePeriodEnd
	}
	if !IsNil(o.GeographicCoverageType) {
		toSerialize["geographic_coverage_type"] = o.GeographicCoverageType
	}
	if !IsNil(o.GeographicCoverageDetails) {
		toSerialize["geographic_coverage_details"] = o.GeographicCoverageDetails
	}
	if !IsNil(o.DataSourceRefreshFrequency) {
		toSerialize["data_source_refresh_frequency"] = o.DataSourceRefreshFrequency
	}
	if !IsNil(o.DataSourceLastRefreshed) {
		toSerialize["data_source_last_refreshed"] = o.DataSourceLastRefreshed
	}
	return toSerialize, nil
}

type NullableAssetsUpdate struct {
	value *AssetsUpdate
	isSet bool
}

func (v NullableAssetsUpdate) Get() *AssetsUpdate {
	return v.value
}

func (v *NullableAssetsUpdate) Set(val *AssetsUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetsUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetsUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetsUpdate(val *AssetsUpdate) *NullableAssetsUpdate {
	return &NullableAssetsUpdate{value: val, isSet: true}
}

func (v NullableAssetsUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetsUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


