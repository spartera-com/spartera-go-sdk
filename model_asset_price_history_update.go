/*
Spartera API Documentation

Auto-generated API documentation for REST services of the Spartera platform

API version: 1.24.0
Contact: support@spartera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sparteraapi

import (
	"encoding/json"
	"time"
)

// checks if the AssetPriceHistoryUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetPriceHistoryUpdate{}

// AssetPriceHistoryUpdate Update schema for modifying AssetPriceHistory
type AssetPriceHistoryUpdate struct {
	AssetId *string `json:"asset_id,omitempty"`
	PriceUsd *float64 `json:"price_usd,omitempty"`
	// When did the price end (Datetime)
	DateEnded *time.Time `json:"date_ended,omitempty"`
}

// NewAssetPriceHistoryUpdate instantiates a new AssetPriceHistoryUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetPriceHistoryUpdate() *AssetPriceHistoryUpdate {
	this := AssetPriceHistoryUpdate{}
	return &this
}

// NewAssetPriceHistoryUpdateWithDefaults instantiates a new AssetPriceHistoryUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetPriceHistoryUpdateWithDefaults() *AssetPriceHistoryUpdate {
	this := AssetPriceHistoryUpdate{}
	return &this
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *AssetPriceHistoryUpdate) GetAssetId() string {
	if o == nil || IsNil(o.AssetId) {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetPriceHistoryUpdate) GetAssetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssetId) {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *AssetPriceHistoryUpdate) HasAssetId() bool {
	if o != nil && !IsNil(o.AssetId) {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *AssetPriceHistoryUpdate) SetAssetId(v string) {
	o.AssetId = &v
}

// GetPriceUsd returns the PriceUsd field value if set, zero value otherwise.
func (o *AssetPriceHistoryUpdate) GetPriceUsd() float64 {
	if o == nil || IsNil(o.PriceUsd) {
		var ret float64
		return ret
	}
	return *o.PriceUsd
}

// GetPriceUsdOk returns a tuple with the PriceUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetPriceHistoryUpdate) GetPriceUsdOk() (*float64, bool) {
	if o == nil || IsNil(o.PriceUsd) {
		return nil, false
	}
	return o.PriceUsd, true
}

// HasPriceUsd returns a boolean if a field has been set.
func (o *AssetPriceHistoryUpdate) HasPriceUsd() bool {
	if o != nil && !IsNil(o.PriceUsd) {
		return true
	}

	return false
}

// SetPriceUsd gets a reference to the given float64 and assigns it to the PriceUsd field.
func (o *AssetPriceHistoryUpdate) SetPriceUsd(v float64) {
	o.PriceUsd = &v
}

// GetDateEnded returns the DateEnded field value if set, zero value otherwise.
func (o *AssetPriceHistoryUpdate) GetDateEnded() time.Time {
	if o == nil || IsNil(o.DateEnded) {
		var ret time.Time
		return ret
	}
	return *o.DateEnded
}

// GetDateEndedOk returns a tuple with the DateEnded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetPriceHistoryUpdate) GetDateEndedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateEnded) {
		return nil, false
	}
	return o.DateEnded, true
}

// HasDateEnded returns a boolean if a field has been set.
func (o *AssetPriceHistoryUpdate) HasDateEnded() bool {
	if o != nil && !IsNil(o.DateEnded) {
		return true
	}

	return false
}

// SetDateEnded gets a reference to the given time.Time and assigns it to the DateEnded field.
func (o *AssetPriceHistoryUpdate) SetDateEnded(v time.Time) {
	o.DateEnded = &v
}

func (o AssetPriceHistoryUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetPriceHistoryUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssetId) {
		toSerialize["asset_id"] = o.AssetId
	}
	if !IsNil(o.PriceUsd) {
		toSerialize["price_usd"] = o.PriceUsd
	}
	if !IsNil(o.DateEnded) {
		toSerialize["date_ended"] = o.DateEnded
	}
	return toSerialize, nil
}

type NullableAssetPriceHistoryUpdate struct {
	value *AssetPriceHistoryUpdate
	isSet bool
}

func (v NullableAssetPriceHistoryUpdate) Get() *AssetPriceHistoryUpdate {
	return v.value
}

func (v *NullableAssetPriceHistoryUpdate) Set(val *AssetPriceHistoryUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetPriceHistoryUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetPriceHistoryUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetPriceHistoryUpdate(val *AssetPriceHistoryUpdate) *NullableAssetPriceHistoryUpdate {
	return &NullableAssetPriceHistoryUpdate{value: val, isSet: true}
}

func (v NullableAssetPriceHistoryUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetPriceHistoryUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


