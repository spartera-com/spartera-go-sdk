/*
Spartera API Documentation

Auto-generated API documentation for REST services of the Spartera platform

API version: 1.24.0
Contact: support@spartera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sparteraapi

import (
	"encoding/json"
)

// checks if the CloudProvidersUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudProvidersUpdate{}

// CloudProvidersUpdate Update schema for modifying CloudProvider
type CloudProvidersUpdate struct {
	Name *string `json:"name,omitempty"`
	ParentCompany *string `json:"parent_company,omitempty"`
	MarketingHomepageUrl *string `json:"marketing_homepage_url,omitempty"`
}

// NewCloudProvidersUpdate instantiates a new CloudProvidersUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudProvidersUpdate() *CloudProvidersUpdate {
	this := CloudProvidersUpdate{}
	return &this
}

// NewCloudProvidersUpdateWithDefaults instantiates a new CloudProvidersUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudProvidersUpdateWithDefaults() *CloudProvidersUpdate {
	this := CloudProvidersUpdate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CloudProvidersUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudProvidersUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CloudProvidersUpdate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CloudProvidersUpdate) SetName(v string) {
	o.Name = &v
}

// GetParentCompany returns the ParentCompany field value if set, zero value otherwise.
func (o *CloudProvidersUpdate) GetParentCompany() string {
	if o == nil || IsNil(o.ParentCompany) {
		var ret string
		return ret
	}
	return *o.ParentCompany
}

// GetParentCompanyOk returns a tuple with the ParentCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudProvidersUpdate) GetParentCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.ParentCompany) {
		return nil, false
	}
	return o.ParentCompany, true
}

// HasParentCompany returns a boolean if a field has been set.
func (o *CloudProvidersUpdate) HasParentCompany() bool {
	if o != nil && !IsNil(o.ParentCompany) {
		return true
	}

	return false
}

// SetParentCompany gets a reference to the given string and assigns it to the ParentCompany field.
func (o *CloudProvidersUpdate) SetParentCompany(v string) {
	o.ParentCompany = &v
}

// GetMarketingHomepageUrl returns the MarketingHomepageUrl field value if set, zero value otherwise.
func (o *CloudProvidersUpdate) GetMarketingHomepageUrl() string {
	if o == nil || IsNil(o.MarketingHomepageUrl) {
		var ret string
		return ret
	}
	return *o.MarketingHomepageUrl
}

// GetMarketingHomepageUrlOk returns a tuple with the MarketingHomepageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudProvidersUpdate) GetMarketingHomepageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MarketingHomepageUrl) {
		return nil, false
	}
	return o.MarketingHomepageUrl, true
}

// HasMarketingHomepageUrl returns a boolean if a field has been set.
func (o *CloudProvidersUpdate) HasMarketingHomepageUrl() bool {
	if o != nil && !IsNil(o.MarketingHomepageUrl) {
		return true
	}

	return false
}

// SetMarketingHomepageUrl gets a reference to the given string and assigns it to the MarketingHomepageUrl field.
func (o *CloudProvidersUpdate) SetMarketingHomepageUrl(v string) {
	o.MarketingHomepageUrl = &v
}

func (o CloudProvidersUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudProvidersUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ParentCompany) {
		toSerialize["parent_company"] = o.ParentCompany
	}
	if !IsNil(o.MarketingHomepageUrl) {
		toSerialize["marketing_homepage_url"] = o.MarketingHomepageUrl
	}
	return toSerialize, nil
}

type NullableCloudProvidersUpdate struct {
	value *CloudProvidersUpdate
	isSet bool
}

func (v NullableCloudProvidersUpdate) Get() *CloudProvidersUpdate {
	return v.value
}

func (v *NullableCloudProvidersUpdate) Set(val *CloudProvidersUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudProvidersUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudProvidersUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudProvidersUpdate(val *CloudProvidersUpdate) *NullableCloudProvidersUpdate {
	return &NullableCloudProvidersUpdate{value: val, isSet: true}
}

func (v NullableCloudProvidersUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudProvidersUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


