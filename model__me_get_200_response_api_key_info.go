/*
Spartera API Documentation

Auto-generated API documentation for REST services of the Spartera platform

API version: 0.0.0
Contact: support@spartera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sparteraapi

import (
	"encoding/json"
)

// checks if the MeGet200ResponseApiKeyInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MeGet200ResponseApiKeyInfo{}

// MeGet200ResponseApiKeyInfo API key information (only for API key authentication)
type MeGet200ResponseApiKeyInfo struct {
	// API key ID
	ApiKeyId *string `json:"api_key_id,omitempty"`
	// API key name
	ApiKeyName *string `json:"api_key_name,omitempty"`
}

// NewMeGet200ResponseApiKeyInfo instantiates a new MeGet200ResponseApiKeyInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMeGet200ResponseApiKeyInfo() *MeGet200ResponseApiKeyInfo {
	this := MeGet200ResponseApiKeyInfo{}
	return &this
}

// NewMeGet200ResponseApiKeyInfoWithDefaults instantiates a new MeGet200ResponseApiKeyInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMeGet200ResponseApiKeyInfoWithDefaults() *MeGet200ResponseApiKeyInfo {
	this := MeGet200ResponseApiKeyInfo{}
	return &this
}

// GetApiKeyId returns the ApiKeyId field value if set, zero value otherwise.
func (o *MeGet200ResponseApiKeyInfo) GetApiKeyId() string {
	if o == nil || IsNil(o.ApiKeyId) {
		var ret string
		return ret
	}
	return *o.ApiKeyId
}

// GetApiKeyIdOk returns a tuple with the ApiKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeGet200ResponseApiKeyInfo) GetApiKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKeyId) {
		return nil, false
	}
	return o.ApiKeyId, true
}

// HasApiKeyId returns a boolean if a field has been set.
func (o *MeGet200ResponseApiKeyInfo) HasApiKeyId() bool {
	if o != nil && !IsNil(o.ApiKeyId) {
		return true
	}

	return false
}

// SetApiKeyId gets a reference to the given string and assigns it to the ApiKeyId field.
func (o *MeGet200ResponseApiKeyInfo) SetApiKeyId(v string) {
	o.ApiKeyId = &v
}

// GetApiKeyName returns the ApiKeyName field value if set, zero value otherwise.
func (o *MeGet200ResponseApiKeyInfo) GetApiKeyName() string {
	if o == nil || IsNil(o.ApiKeyName) {
		var ret string
		return ret
	}
	return *o.ApiKeyName
}

// GetApiKeyNameOk returns a tuple with the ApiKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeGet200ResponseApiKeyInfo) GetApiKeyNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKeyName) {
		return nil, false
	}
	return o.ApiKeyName, true
}

// HasApiKeyName returns a boolean if a field has been set.
func (o *MeGet200ResponseApiKeyInfo) HasApiKeyName() bool {
	if o != nil && !IsNil(o.ApiKeyName) {
		return true
	}

	return false
}

// SetApiKeyName gets a reference to the given string and assigns it to the ApiKeyName field.
func (o *MeGet200ResponseApiKeyInfo) SetApiKeyName(v string) {
	o.ApiKeyName = &v
}

func (o MeGet200ResponseApiKeyInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MeGet200ResponseApiKeyInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKeyId) {
		toSerialize["api_key_id"] = o.ApiKeyId
	}
	if !IsNil(o.ApiKeyName) {
		toSerialize["api_key_name"] = o.ApiKeyName
	}
	return toSerialize, nil
}

type NullableMeGet200ResponseApiKeyInfo struct {
	value *MeGet200ResponseApiKeyInfo
	isSet bool
}

func (v NullableMeGet200ResponseApiKeyInfo) Get() *MeGet200ResponseApiKeyInfo {
	return v.value
}

func (v *NullableMeGet200ResponseApiKeyInfo) Set(val *MeGet200ResponseApiKeyInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMeGet200ResponseApiKeyInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMeGet200ResponseApiKeyInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMeGet200ResponseApiKeyInfo(val *MeGet200ResponseApiKeyInfo) *NullableMeGet200ResponseApiKeyInfo {
	return &NullableMeGet200ResponseApiKeyInfo{value: val, isSet: true}
}

func (v NullableMeGet200ResponseApiKeyInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMeGet200ResponseApiKeyInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


