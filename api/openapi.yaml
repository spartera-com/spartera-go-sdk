openapi: 3.1.0
info:
  contact:
    email: support@spartera.com
    name: API Support
  description: Auto-generated API documentation for REST services of the Spartera
    platform
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Spartera API Documentation
  version: 1.24.0
servers:
- description: Production server
  url: https://api.spartera.com/
- description: Staging server
  url: https://stage.api.spartera.com/
tags:
- description: API Keys operations
  name: API Keys
- description: Alerts operations
  name: Alerts
- description: Asset Price History operations
  name: Asset Price History
- description: Assets operations
  name: Assets
- description: Cloud Providers operations
  name: Cloud Providers
- description: Companies operations
  name: Companies
- description: Connections operations
  name: Connections
- description: Favorites operations
  name: Favorites
- description: Job Functions operations
  name: Job Functions
- description: Storage Engines operations
  name: Storage Engines
- description: Users operations
  name: Users
paths:
  /analyze/{company_handle}/assets/{asset_slug}:
    get:
      parameters:
      - explode: false
        in: path
        name: asset_slug
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: company_handle
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_analyze__company_handle__assets__asset_slug__get_200_response'
          description: Successfully retrieved assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Process (analyze) an asset.
      tags:
      - Assets
  /cloud-providers:
    get:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_providers_get_200_response'
          description: Successfully retrieved cloud providers
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get a list of all cloud providers
      tags:
      - Cloud Providers
  /cloud-providers/{provider_id}:
    get:
      parameters:
      - explode: false
        in: path
        name: provider_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_providers__provider_id__get_200_response'
          description: Successfully retrieved cloud providers
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get single cloud provider by ID
      tags:
      - Cloud Providers
  /cloud-providers/{provider_id}/storage-engines:
    get:
      parameters:
      - explode: false
        in: path
        name: provider_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_providers__provider_id__storage_engines_get_200_response'
          description: Successfully retrieved storage engines
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get a list of all storage engines
      tags:
      - Storage Engines
  /cloud-providers/{provider_id}/storage-engines/{engine_id}:
    get:
      parameters:
      - explode: false
        in: path
        name: provider_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: engine_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_cloud_providers__provider_id__storage_engines_get_200_response'
          description: Successfully retrieved storage engines
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get single storage engine by ID
      tags:
      - Storage Engines
  /companies/{company_id}:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__get_200_response'
          description: Successfully retrieved companies
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get details of the requestor's own company
      tags:
      - Companies
    patch:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompaniesUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__patch_200_response'
          description: Successfully updated companies
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Update an existing company by ID
      tags:
      - Companies
  /companies/{company_id}/analytics/assets:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__analytics_assets_get_200_response'
          description: Successfully retrieved companies
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: |-
        Get asset performance analytics
            Query params: start_date, end_date, limit, sort_by, include
      tags:
      - Companies
  /companies/{company_id}/analytics/customers:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__analytics_assets_get_200_response'
          description: Successfully retrieved companies
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: |-
        Get customer analytics including growth and segmentation
            Query params: start_date, end_date, group_by, segment_by
      tags:
      - Companies
  /companies/{company_id}/analytics/dashboard:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__analytics_assets_get_200_response'
          description: Successfully retrieved companies
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: |-
        Get comprehensive dashboard analytics for seller dashboard
            Includes all metrics needed for dashboard charts in one call
            Query params: start_date, end_date, period (day/week/month/quarter)
      tags:
      - Companies
  /companies/{company_id}/analytics/sales:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__analytics_assets_get_200_response'
          description: Successfully retrieved companies
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: |-
        Get sales over time analytics
            Query params: start_date, end_date, group_by (day/week/month/quarter), metrics
      tags:
      - Companies
  /companies/{company_id}/api-keys:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__api_keys_get_200_response'
          description: Successfully retrieved api keys
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: |-
        Get all API keys for a company.
            Returns masked API keys for security (sk_****1234).
      tags:
      - API Keys
    post:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeysInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__api_keys_post_200_response'
          description: Successfully created api keys
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: |-
        Create single API key.
            Returns the actual sk_ key (only time it's exposed) and api_key_id for future operations.
      tags:
      - API Keys
  /companies/{company_id}/api-keys/{api_key_id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: api_key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__api_keys__api_key_id__delete_200_response'
          description: Successfully deleted api keys
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: |-
        Delete (deactivate) single API key by api_key_id.
            Uses the api_key_id returned during creation for clean identification.
            Fixed to use correct primary key lookup.
      tags:
      - API Keys
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: api_key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__api_keys__api_key_id__get_200_response'
          description: Successfully retrieved api keys
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: |-
        Get single API key by ID.
            Returns masked API key for security (sk_****1234).
      tags:
      - API Keys
    patch:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: api_key_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeysUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__api_keys__api_key_id__patch_200_response'
          description: Successfully updated api keys
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: |-
        Update an existing API key by ID.
            Can update metadata like name, expiration, rate limits, etc.
            Cannot update the actual key value (for security).
      tags:
      - API Keys
  /companies/{company_id}/api-keys/{api_key_id}/revoke:
    post:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: api_key_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeysInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__api_keys_post_200_response'
          description: Successfully created api keys
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: |-
        Explicitly revoke an API key with reason tracking.
            This is different from delete as it includes revocation metadata.
      tags:
      - API Keys
  /companies/{company_id}/api-keys/{api_key_id}/stats:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: api_key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__api_keys_get_200_response'
          description: Successfully retrieved api keys
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: |-
        Get usage statistics for a specific API key.
            Returns usage count, last used date, failed attempts, etc.
      tags:
      - API Keys
  /companies/{company_id}/assets:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets_get_200_response'
          description: Successfully retrieved assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get all assets for a specific company
      tags:
      - Assets
    post:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets_post_200_response'
          description: Successfully created assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Create a new asset
      tags:
      - Assets
  /companies/{company_id}/assets/statistics:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets_get_200_response'
          description: Successfully retrieved assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get statistics for all assets the user has access to
      tags:
      - Assets
  /companies/{company_id}/assets/{asset_id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets__asset_id__delete_200_response'
          description: Successfully deleted assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Delete single asset by ID
      tags:
      - Assets
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_analyze__company_handle__assets__asset_slug__get_200_response'
          description: Successfully retrieved assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get single asset by ID
      tags:
      - Assets
    patch:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets__asset_id__patch_200_response'
          description: Successfully updated assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Update an existing asset by ID
      tags:
      - Assets
  /companies/{company_id}/assets/{asset_id}/infoschema:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets_get_200_response'
          description: Successfully retrieved assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get the information schema for a specific asset's table
      tags:
      - Assets
  /companies/{company_id}/assets/{asset_id}/infoschema/save:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets_get_200_response'
          description: Successfully retrieved assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Retrieve and save an asset's information schema
      tags:
      - Assets
  /companies/{company_id}/assets/{asset_id}/predicted_price:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets_get_200_response'
          description: Successfully retrieved assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get AI-predicted pricing for a specific asset
      tags:
      - Assets
  /companies/{company_id}/assets/{asset_id}/prices:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets__asset_id__prices_get_200_response'
          description: Successfully retrieved asset price history
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get all price history records for a specific asset
      tags:
      - Asset Price History
    post:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetPriceHistoryInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets__asset_id__prices_post_200_response'
          description: Successfully created asset price history
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Create a new price history record for an asset
      tags:
      - Asset Price History
  /companies/{company_id}/assets/{asset_id}/prices/active:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets__asset_id__prices_get_200_response'
          description: Successfully retrieved asset price history
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get the currently active price for an asset
      tags:
      - Asset Price History
  /companies/{company_id}/assets/{asset_id}/prices/calculate_credits:
    post:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetPriceHistoryInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets__asset_id__prices_post_200_response'
          description: Successfully created asset price history
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Calculate the credit equivalent for a given USD price without saving
      tags:
      - Asset Price History
  /companies/{company_id}/assets/{asset_id}/prices/discount:
    post:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetPriceHistoryInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets__asset_id__prices_post_200_response'
          description: Successfully created asset price history
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: "POST /companies/{company_id}/assets/{asset_id}/prices/discount"
      tags:
      - Asset Price History
  /companies/{company_id}/assets/{asset_id}/prices/{aph_id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: aph_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets__asset_id__prices__aph_id__delete_200_response'
          description: Successfully deleted asset price history
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Delete single price history record by ID
      tags:
      - Asset Price History
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: aph_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets__asset_id__prices__aph_id__get_200_response'
          description: Successfully retrieved asset price history
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get single price history record by ID
      tags:
      - Asset Price History
    patch:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: aph_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetPriceHistoryUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets__asset_id__prices__aph_id__patch_200_response'
          description: Successfully updated asset price history
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Update an existing price history record by ID
      tags:
      - Asset Price History
  /companies/{company_id}/assets/{asset_id}/statistics:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets_get_200_response'
          description: Successfully retrieved assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get statistics for a specific asset (public endpoint)
      tags:
      - Assets
  /companies/{company_id}/assets/{asset_id}/test:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__assets_get_200_response'
          description: Successfully retrieved assets
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Test out an Asset (on a subset of data)
      tags:
      - Assets
  /companies/{company_id}/connections:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__connections_get_200_response'
          description: Successfully retrieved connections
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get all connections for a specific company
      tags:
      - Connections
    post:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__connections_post_200_response'
          description: Successfully created connections
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Create a new connection by ID
      tags:
      - Connections
  /companies/{company_id}/connections/{connection_id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__connections__connection_id__delete_200_response'
          description: Successfully deleted connections
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Delete single connection by ID
      tags:
      - Connections
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__connections__connection_id__get_200_response'
          description: Successfully retrieved connections
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get single connection by ID
      tags:
      - Connections
    patch:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionsUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__connections__connection_id__patch_200_response'
          description: Successfully updated connections
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Update an existing connection by ID
      tags:
      - Connections
  /companies/{company_id}/connections/{connection_id}/infoschema:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__connections_get_200_response'
          description: Successfully retrieved connections
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Retrieve the information schema for the specified connection
      tags:
      - Connections
  /companies/{company_id}/connections/{connection_id}/test:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__connections_get_200_response'
          description: Successfully retrieved connections
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Test the specified connection
      tags:
      - Connections
  /companies/{company_id}/objects:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__analytics_assets_get_200_response'
          description: Successfully retrieved companies
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: "Get all objects (connections, assets) of a single company"
      tags:
      - Companies
  /companies/{company_id}/requests/plan:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__analytics_assets_get_200_response'
          description: Successfully retrieved companies
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get the total number of requests allocated in the company's current
        subscription plan.
      tags:
      - Companies
  /companies/{company_id}/requests/usage:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__analytics_assets_get_200_response'
          description: Successfully retrieved companies
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get company request usage data for a specific month. Returns JSON metrics
        by default or CSV logs when download parameter is included.
      tags:
      - Companies
  /companies/{company_id}/users:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users_get_200_response'
          description: Successfully retrieved users
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get a list of all users in a company
      tags:
      - Users
    post:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users_post_200_response'
          description: Successfully created users
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: Create a new user
      tags:
      - Users
  /companies/{company_id}/users/{user_id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__delete_200_response'
          description: Successfully deleted users
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Delete single user by ID
      tags:
      - Users
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__get_200_response'
          description: Successfully retrieved users
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get single user by ID
      tags:
      - Users
    patch:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__patch_200_response'
          description: Successfully updated users
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Update an existing user by ID
      tags:
      - Users
  /companies/{company_id}/users/{user_id}/alerts:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__alerts_get_200_response'
          description: Successfully retrieved alerts
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get a list of all alerts for a specific user
      tags:
      - Alerts
    post:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertsInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__alerts_post_200_response'
          description: Successfully created alerts
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: "POST /companies/{company_id}/users/{user_id}/alerts"
      tags:
      - Alerts
  /companies/{company_id}/users/{user_id}/alerts/asset/{asset_id}:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__alerts_asset__asset_id__get_200_response'
          description: Successfully retrieved alerts
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get all alerts for a specific asset (by user)
      tags:
      - Alerts
  /companies/{company_id}/users/{user_id}/alerts/asset/{asset_id}/all:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__alerts_get_200_response'
          description: Successfully retrieved alerts
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get all alerts for a specific asset
      tags:
      - Alerts
  /companies/{company_id}/users/{user_id}/alerts/{alert_id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alert_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__alerts__alert_id__delete_200_response'
          description: Successfully deleted alerts
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Delete single alert by ID
      tags:
      - Alerts
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alert_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__alerts_asset__asset_id__get_200_response'
          description: Successfully retrieved alerts
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get single alert by ID
      tags:
      - Alerts
    patch:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alert_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertsUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__alerts__alert_id__patch_200_response'
          description: Successfully updated alerts
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Update an existing alert by ID
      tags:
      - Alerts
  /companies/{company_id}/users/{user_id}/favorites:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__favorites_get_200_response'
          description: Successfully retrieved favorites
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get a list of all favorites for a specific user
      tags:
      - Favorites
    post:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoritesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__favorites_post_200_response'
          description: Successfully created favorites
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
      security:
      - ApiKeyAuth: []
      summary: "POST /companies/{company_id}/users/{user_id}/favorites"
      tags:
      - Favorites
  /companies/{company_id}/users/{user_id}/favorites/category/{category}:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: category
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__favorites_category__category__get_200_response'
          description: Successfully retrieved favorites
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get all favorites for the specified user in a specific category
      tags:
      - Favorites
  /companies/{company_id}/users/{user_id}/favorites/check/{asset_id}:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__favorites_category__category__get_200_response'
          description: Successfully retrieved favorites
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Check if the specified user has favorited a specific asset
      tags:
      - Favorites
  /companies/{company_id}/users/{user_id}/favorites/uncategorized:
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__favorites_get_200_response'
          description: Successfully retrieved favorites
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get all favorites for the specified user that don't have a category
      tags:
      - Favorites
  /companies/{company_id}/users/{user_id}/favorites/{favorite_id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: favorite_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__favorites__favorite_id__delete_200_response'
          description: Successfully deleted favorites
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Delete single favorite by ID (unfavorite an asset)
      tags:
      - Favorites
    get:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: favorite_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__favorites_category__category__get_200_response'
          description: Successfully retrieved favorites
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get single favorite by ID
      tags:
      - Favorites
    patch:
      parameters:
      - explode: false
        in: path
        name: company_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: favorite_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoritesUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users__user_id__favorites__favorite_id__patch_200_response'
          description: Successfully updated favorites
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Update an existing favorite by ID
      tags:
      - Favorites
  /job-functions:
    get:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_job_functions_get_200_response'
          description: Successfully retrieved job functions
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get a list of all job functions
      tags:
      - Job Functions
  /job-functions/{function_id}:
    get:
      parameters:
      - explode: false
        in: path
        name: function_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_job_functions__function_id__get_200_response'
          description: Successfully retrieved job functions
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get single job function by ID
      tags:
      - Job Functions
  /me:
    get:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_companies__company_id__users_get_200_response'
          description: Successfully retrieved users
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
      security:
      - ApiKeyAuth: []
      summary: Get current authenticated user's profile.
      tags:
      - Users
components:
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      description: Invalid input
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
      description: Authentication required
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
      description: Permission denied
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_3'
      description: Resource not found
  schemas:
    Alerts:
      description: User alerts for when assets are updated
      example:
        last_updated: 2000-01-23T04:56:07.000+00:00
        is_active: true
        company_id: company_id
        user_id: user_id
        date_created: 2000-01-23T04:56:07.000+00:00
        alert_id: 0
        asset_id: asset_id
      properties:
        date_created:
          format: date-time
          type: string
        last_updated:
          format: date-time
          type: string
        alert_id:
          format: int64
          type: integer
        asset_id:
          type: string
        user_id:
          type: string
        company_id:
          type: string
        is_active:
          description: Whether this alert is currently active
          type: boolean
      required:
      - asset_id
      - company_id
      - is_active
    AlertsInput:
      description: Input schema for creating Alert
      example:
        is_active: true
        company_id: company_id
        user_id: user_id
        asset_id: asset_id
      properties:
        asset_id:
          type: string
        user_id:
          type: string
        company_id:
          type: string
        is_active:
          description: Whether this alert is currently active
          type: boolean
      required:
      - asset_id
      - company_id
    AlertsUpdate:
      description: Update schema for modifying Alert
      example:
        is_active: true
        company_id: company_id
        user_id: user_id
        asset_id: asset_id
      properties:
        asset_id:
          type: string
        user_id:
          type: string
        company_id:
          type: string
        is_active:
          description: Whether this alert is currently active
          type: boolean
    ApiKeys:
      description: API Keys model storing every key created with SOC2 compliance
      example:
        last_updated: 2000-01-23T04:56:07.000+00:00
        company_id: company_id
        expiration_date_utc: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        role_id: 6
        date_created: 2000-01-23T04:56:07.000+00:00
        name: name
        api_key_id: 0
      properties:
        date_created:
          format: date-time
          type: string
        last_updated:
          format: date-time
          type: string
        api_key_id:
          format: int64
          type: integer
        user_id:
          description: User who owns this API key
          type: string
        company_id:
          description: Company this API key belongs to
          type: string
        role_id:
          description: Role/permission level for this API key
          format: int64
          type: integer
        name:
          description: Human-readable name for this API key
          type: string
        expiration_date_utc:
          description: When this API key expires (NULL = never expires)
          format: date-time
          type: string
      required:
      - api_key_id
      - company_id
      - role_id
    ApiKeysInput:
      description: Input schema for creating ApiKey
      example:
        company_id: company_id
        expiration_date_utc: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        role_id: 0
        name: name
      properties:
        user_id:
          description: User who owns this API key
          type: string
        company_id:
          description: Company this API key belongs to
          type: string
        role_id:
          description: Role/permission level for this API key
          format: int64
          type: integer
        name:
          description: Human-readable name for this API key
          type: string
        expiration_date_utc:
          description: When this API key expires (NULL = never expires)
          format: date-time
          type: string
      required:
      - company_id
      - role_id
    ApiKeysUpdate:
      description: Update schema for modifying ApiKey
      example:
        company_id: company_id
        expiration_date_utc: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        role_id: 0
        name: name
      properties:
        user_id:
          description: User who owns this API key
          type: string
        company_id:
          description: Company this API key belongs to
          type: string
        role_id:
          description: Role/permission level for this API key
          format: int64
          type: integer
        name:
          description: Human-readable name for this API key
          type: string
        expiration_date_utc:
          description: When this API key expires (NULL = never expires)
          format: date-time
          type: string
    AssetPriceHistory:
      description: Pricing history for an asset
      example:
        aph_id: aph_id
        price_usd: 0.8008281904610115
        last_updated: 2000-01-23T04:56:07.000+00:00
        date_ended: 2000-01-23T04:56:07.000+00:00
        date_created: 2000-01-23T04:56:07.000+00:00
        asset_id: asset_id
      properties:
        date_created:
          format: date-time
          type: string
        last_updated:
          format: date-time
          type: string
        aph_id:
          type: string
        asset_id:
          type: string
        price_usd:
          format: double
          type: number
        date_ended:
          description: When did the price end (Datetime)
          format: date-time
          type: string
      required:
      - asset_id
    AssetPriceHistoryInput:
      description: Input schema for creating AssetPriceHistory
      example:
        price_usd: 0.8008281904610115
        date_ended: 2000-01-23T04:56:07.000+00:00
        asset_id: asset_id
      properties:
        asset_id:
          type: string
        price_usd:
          format: double
          type: number
        date_ended:
          description: When did the price end (Datetime)
          format: date-time
          type: string
      required:
      - asset_id
    AssetPriceHistoryUpdate:
      description: Update schema for modifying AssetPriceHistory
      example:
        price_usd: 0.8008281904610115
        date_ended: 2000-01-23T04:56:07.000+00:00
        asset_id: asset_id
      properties:
        asset_id:
          type: string
        price_usd:
          format: double
          type: number
        date_ended:
          description: When did the price end (Datetime)
          format: date-time
          type: string
    Assets:
      description: Asset model for every asset (insight/visualization/feed/etc.) customer
        creates
      example:
        industry_id: 6
        data_time_period_start: 2000-01-23T04:56:07.000+00:00
        viz_data_aggregation: No Aggregation
        allow_params: true
        viz_dep_var_col_name: viz_dep_var_col_name
        description: description
        source_table_name: source_table_name
        asset_id: asset_id
        source: MANUAL
        geographic_coverage_type: GLOBAL
        data_source_last_refreshed: 2000-01-23T04:56:07.000+00:00
        geographic_coverage_details: geographic_coverage_details
        next_run: 2000-01-23T04:56:07.000+00:00
        approved_by_user_id: approved_by_user_id
        data_time_period_end: 2000-01-23T04:56:07.000+00:00
        approved_at: 2000-01-23T04:56:07.000+00:00
        cached: true
        asset_type: CALCULATION
        viz_color_col_name: viz_color_col_name
        llm_connection_id: llm_connection_id
        viz_data_limit: 1
        slug: slug
        viz_sort_direction: No Sorting
        data_source_refresh_frequency: REAL_TIME
        last_updated: 2000-01-23T04:56:07.000+00:00
        snippet_id: 0
        company_id: company_id
        visibility: PRIVATE
        viz_size_col_name: viz_size_col_name
        date_created: 2000-01-23T04:56:07.000+00:00
        approval_status: approval_status
        sell_in_marketplace: true
        sql_logic: sql_logic
        viz_chart_library: PLOTLY
        viz_indep_var_col_name: viz_indep_var_col_name
        tags: tags
        ai_job_id: ai_job_id
        source_schema_name: source_schema_name
        schedule: schedule
        asset_schema: "{}"
        user_id: user_id
        connection_id: connection_id
        name: name
        viz_chart_type: LINE
        accept_terms: true
        viz_color_scheme: Default
      properties:
        date_created:
          format: date-time
          type: string
        last_updated:
          format: date-time
          type: string
        asset_id:
          type: string
        user_id:
          type: string
        company_id:
          type: string
        connection_id:
          type: string
        llm_connection_id:
          type: string
        snippet_id:
          format: int64
          type: integer
        industry_id:
          format: int64
          type: integer
        ai_job_id:
          description: Links to the AutoInsights job that created this asset
          type: string
        approval_status:
          description: Approval status for AI-generated assets
          type: string
        approved_by_user_id:
          description: User who approved this asset for marketplace
          type: string
        approved_at:
          description: When this asset was approved for marketplace
          format: date-time
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        source:
          description: "Enum type: Source"
          enum:
          - MANUAL
          - AUTOMATIC
          type: string
        asset_type:
          description: "Enum type: AssetType"
          enum:
          - CALCULATION
          - VISUALIZATION
          - DATA
          type: string
        asset_schema:
          description: "Stores database table schema data including columns, types,\
            \ and metadata"
          type: object
        visibility:
          description: "Enum type: Visibility"
          enum:
          - PRIVATE
          - SHARED
          type: string
        tags:
          type: string
        sql_logic:
          type: string
        source_schema_name:
          type: string
        source_table_name:
          type: string
        sell_in_marketplace:
          type: boolean
        viz_chart_library:
          description: "Enum type: PlottingLibrary"
          enum:
          - PLOTLY
          - MATPLOTLIB
          - SEABORN
          type: string
        viz_chart_type:
          description: "Enum type: ChartType"
          enum:
          - LINE
          - BAR
          - HORIZONTALBAR
          - PIE
          - DOUGHNUT
          - POLAR
          - RADAR
          - BUBBLE
          - SCATTER
          - NA
          type: string
        viz_dep_var_col_name:
          type: string
        viz_indep_var_col_name:
          type: string
        viz_size_col_name:
          type: string
        viz_color_col_name:
          type: string
        viz_data_aggregation:
          description: "Enum type: AggregationType"
          enum:
          - No Aggregation
          - Sum
          - Average
          - Count
          - Minimum
          - Maximum
          type: string
        viz_sort_direction:
          description: "Enum type: SortDirection"
          enum:
          - No Sorting
          - Ascending
          - Descending
          type: string
        viz_data_limit:
          format: int64
          type: integer
        viz_color_scheme:
          description: "Enum type: ColorScheme"
          enum:
          - Default
          - Sequential
          - Diverging
          - Categorical
          - Monochrome
          - Pastel
          - Dark
          - Light
          type: string
        allow_params:
          type: boolean
        accept_terms:
          type: boolean
        cached:
          type: boolean
        schedule:
          type: string
        next_run:
          format: date-time
          type: string
        data_time_period_start:
          description: Start date of the data time period covered
          format: date-time
          type: string
        data_time_period_end:
          description: End date of the data time period covered
          format: date-time
          type: string
        geographic_coverage_type:
          description: "Type of geographic coverage (Enum type: GeographicCoverage)"
          enum:
          - GLOBAL
          - CONTINENTAL
          - REGIONAL
          - NATIONAL
          - STATE
          - LOCAL
          - CUSTOM
          - UNKNOWN
          type: string
        geographic_coverage_details:
          description: "Specific regions/countries covered (e.g., 'United States,\
            \ Canada, Mexico')"
          type: string
        data_source_refresh_frequency:
          description: "How often the source data is refreshed (Enum type: DataRefreshFrequency)"
          enum:
          - REAL_TIME
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
          - QUARTERLY
          - ANNUAL
          - ONE_TIME
          - CUSTOM
          - UNKNOWN
          type: string
        data_source_last_refreshed:
          description: When the source data was last refreshed
          format: date-time
          type: string
      required:
      - accept_terms
      - allow_params
      - company_id
      - name
      - sell_in_marketplace
      - source
    AssetsInput:
      description: Input schema for creating Asset
      example:
        industry_id: 0
        data_time_period_start: 2000-01-23T04:56:07.000+00:00
        viz_data_aggregation: No Aggregation
        allow_params: true
        viz_dep_var_col_name: viz_dep_var_col_name
        description: description
        source_table_name: source_table_name
        source: MANUAL
        geographic_coverage_type: GLOBAL
        data_source_last_refreshed: 2000-01-23T04:56:07.000+00:00
        geographic_coverage_details: geographic_coverage_details
        next_run: 2000-01-23T04:56:07.000+00:00
        approved_by_user_id: approved_by_user_id
        data_time_period_end: 2000-01-23T04:56:07.000+00:00
        approved_at: 2000-01-23T04:56:07.000+00:00
        cached: true
        asset_type: CALCULATION
        viz_color_col_name: viz_color_col_name
        viz_data_limit: 6
        slug: slug
        viz_sort_direction: No Sorting
        data_source_refresh_frequency: REAL_TIME
        company_id: company_id
        viz_size_col_name: viz_size_col_name
        approval_status: approval_status
        sell_in_marketplace: true
        sql_logic: sql_logic
        viz_chart_library: PLOTLY
        viz_indep_var_col_name: viz_indep_var_col_name
        tags: tags
        source_schema_name: source_schema_name
        schedule: schedule
        asset_schema: "{}"
        user_id: user_id
        connection_id: connection_id
        name: name
        viz_chart_type: LINE
        accept_terms: true
        viz_color_scheme: Default
      properties:
        user_id:
          type: string
        company_id:
          type: string
        connection_id:
          type: string
        industry_id:
          format: int64
          type: integer
        approval_status:
          description: Approval status for AI-generated assets
          type: string
        approved_by_user_id:
          description: User who approved this asset for marketplace
          type: string
        approved_at:
          description: When this asset was approved for marketplace
          format: date-time
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        source:
          description: "Enum type: Source"
          enum:
          - MANUAL
          - AUTOMATIC
          type: string
        asset_type:
          description: "Enum type: AssetType"
          enum:
          - CALCULATION
          - VISUALIZATION
          - DATA
          type: string
        asset_schema:
          description: "Stores database table schema data including columns, types,\
            \ and metadata"
          type: object
        tags:
          type: string
        sql_logic:
          type: string
        source_schema_name:
          type: string
        source_table_name:
          type: string
        sell_in_marketplace:
          type: boolean
        viz_chart_library:
          description: "Enum type: PlottingLibrary"
          enum:
          - PLOTLY
          - MATPLOTLIB
          - SEABORN
          type: string
        viz_chart_type:
          description: "Enum type: ChartType"
          enum:
          - LINE
          - BAR
          - HORIZONTALBAR
          - PIE
          - DOUGHNUT
          - POLAR
          - RADAR
          - BUBBLE
          - SCATTER
          - NA
          type: string
        viz_dep_var_col_name:
          type: string
        viz_indep_var_col_name:
          type: string
        viz_size_col_name:
          type: string
        viz_color_col_name:
          type: string
        viz_data_aggregation:
          description: "Enum type: AggregationType"
          enum:
          - No Aggregation
          - Sum
          - Average
          - Count
          - Minimum
          - Maximum
          type: string
        viz_sort_direction:
          description: "Enum type: SortDirection"
          enum:
          - No Sorting
          - Ascending
          - Descending
          type: string
        viz_data_limit:
          format: int64
          type: integer
        viz_color_scheme:
          description: "Enum type: ColorScheme"
          enum:
          - Default
          - Sequential
          - Diverging
          - Categorical
          - Monochrome
          - Pastel
          - Dark
          - Light
          type: string
        allow_params:
          type: boolean
        accept_terms:
          type: boolean
        cached:
          type: boolean
        schedule:
          type: string
        next_run:
          format: date-time
          type: string
        data_time_period_start:
          description: Start date of the data time period covered
          format: date-time
          type: string
        data_time_period_end:
          description: End date of the data time period covered
          format: date-time
          type: string
        geographic_coverage_type:
          description: "Type of geographic coverage (Enum type: GeographicCoverage)"
          enum:
          - GLOBAL
          - CONTINENTAL
          - REGIONAL
          - NATIONAL
          - STATE
          - LOCAL
          - CUSTOM
          - UNKNOWN
          type: string
        geographic_coverage_details:
          description: "Specific regions/countries covered (e.g., 'United States,\
            \ Canada, Mexico')"
          type: string
        data_source_refresh_frequency:
          description: "How often the source data is refreshed (Enum type: DataRefreshFrequency)"
          enum:
          - REAL_TIME
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
          - QUARTERLY
          - ANNUAL
          - ONE_TIME
          - CUSTOM
          - UNKNOWN
          type: string
        data_source_last_refreshed:
          description: When the source data was last refreshed
          format: date-time
          type: string
      required:
      - company_id
      - name
      - source
    AssetsUpdate:
      description: Update schema for modifying Asset
      example:
        industry_id: 0
        data_time_period_start: 2000-01-23T04:56:07.000+00:00
        viz_data_aggregation: No Aggregation
        allow_params: true
        viz_dep_var_col_name: viz_dep_var_col_name
        description: description
        source_table_name: source_table_name
        source: MANUAL
        geographic_coverage_type: GLOBAL
        data_source_last_refreshed: 2000-01-23T04:56:07.000+00:00
        geographic_coverage_details: geographic_coverage_details
        next_run: 2000-01-23T04:56:07.000+00:00
        approved_by_user_id: approved_by_user_id
        data_time_period_end: 2000-01-23T04:56:07.000+00:00
        approved_at: 2000-01-23T04:56:07.000+00:00
        cached: true
        asset_type: CALCULATION
        viz_color_col_name: viz_color_col_name
        viz_data_limit: 6
        slug: slug
        viz_sort_direction: No Sorting
        data_source_refresh_frequency: REAL_TIME
        company_id: company_id
        viz_size_col_name: viz_size_col_name
        approval_status: approval_status
        sell_in_marketplace: true
        sql_logic: sql_logic
        viz_chart_library: PLOTLY
        viz_indep_var_col_name: viz_indep_var_col_name
        tags: tags
        source_schema_name: source_schema_name
        schedule: schedule
        asset_schema: "{}"
        user_id: user_id
        connection_id: connection_id
        name: name
        viz_chart_type: LINE
        accept_terms: true
        viz_color_scheme: Default
      properties:
        user_id:
          type: string
        company_id:
          type: string
        connection_id:
          type: string
        industry_id:
          format: int64
          type: integer
        approval_status:
          description: Approval status for AI-generated assets
          type: string
        approved_by_user_id:
          description: User who approved this asset for marketplace
          type: string
        approved_at:
          description: When this asset was approved for marketplace
          format: date-time
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        source:
          description: "Enum type: Source"
          enum:
          - MANUAL
          - AUTOMATIC
          type: string
        asset_type:
          description: "Enum type: AssetType"
          enum:
          - CALCULATION
          - VISUALIZATION
          - DATA
          type: string
        asset_schema:
          description: "Stores database table schema data including columns, types,\
            \ and metadata"
          type: object
        tags:
          type: string
        sql_logic:
          type: string
        source_schema_name:
          type: string
        source_table_name:
          type: string
        sell_in_marketplace:
          type: boolean
        viz_chart_library:
          description: "Enum type: PlottingLibrary"
          enum:
          - PLOTLY
          - MATPLOTLIB
          - SEABORN
          type: string
        viz_chart_type:
          description: "Enum type: ChartType"
          enum:
          - LINE
          - BAR
          - HORIZONTALBAR
          - PIE
          - DOUGHNUT
          - POLAR
          - RADAR
          - BUBBLE
          - SCATTER
          - NA
          type: string
        viz_dep_var_col_name:
          type: string
        viz_indep_var_col_name:
          type: string
        viz_size_col_name:
          type: string
        viz_color_col_name:
          type: string
        viz_data_aggregation:
          description: "Enum type: AggregationType"
          enum:
          - No Aggregation
          - Sum
          - Average
          - Count
          - Minimum
          - Maximum
          type: string
        viz_sort_direction:
          description: "Enum type: SortDirection"
          enum:
          - No Sorting
          - Ascending
          - Descending
          type: string
        viz_data_limit:
          format: int64
          type: integer
        viz_color_scheme:
          description: "Enum type: ColorScheme"
          enum:
          - Default
          - Sequential
          - Diverging
          - Categorical
          - Monochrome
          - Pastel
          - Dark
          - Light
          type: string
        allow_params:
          type: boolean
        accept_terms:
          type: boolean
        cached:
          type: boolean
        schedule:
          type: string
        next_run:
          format: date-time
          type: string
        data_time_period_start:
          description: Start date of the data time period covered
          format: date-time
          type: string
        data_time_period_end:
          description: End date of the data time period covered
          format: date-time
          type: string
        geographic_coverage_type:
          description: "Type of geographic coverage (Enum type: GeographicCoverage)"
          enum:
          - GLOBAL
          - CONTINENTAL
          - REGIONAL
          - NATIONAL
          - STATE
          - LOCAL
          - CUSTOM
          - UNKNOWN
          type: string
        geographic_coverage_details:
          description: "Specific regions/countries covered (e.g., 'United States,\
            \ Canada, Mexico')"
          type: string
        data_source_refresh_frequency:
          description: "How often the source data is refreshed (Enum type: DataRefreshFrequency)"
          enum:
          - REAL_TIME
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
          - QUARTERLY
          - ANNUAL
          - ONE_TIME
          - CUSTOM
          - UNKNOWN
          type: string
        data_source_last_refreshed:
          description: When the source data was last refreshed
          format: date-time
          type: string
    CloudProviders:
      description: Cloud providers (platforms) database
      example:
        last_updated: 2000-01-23T04:56:07.000+00:00
        parent_company: parent_company
        marketing_homepage_url: marketing_homepage_url
        date_created: 2000-01-23T04:56:07.000+00:00
        name: name
        provider_id: 0
      properties:
        date_created:
          format: date-time
          type: string
        last_updated:
          format: date-time
          type: string
        provider_id:
          format: int64
          type: integer
        name:
          type: string
        parent_company:
          type: string
        marketing_homepage_url:
          type: string
      required:
      - name
    CloudProvidersInput:
      description: Input schema for creating CloudProvider
      properties:
        name:
          type: string
        parent_company:
          type: string
        marketing_homepage_url:
          type: string
      required:
      - name
    CloudProvidersUpdate:
      description: Update schema for modifying CloudProvider
      properties:
        name:
          type: string
        parent_company:
          type: string
        marketing_homepage_url:
          type: string
    Companies:
      description: All of our customer company entities
      example:
        last_updated: 2000-01-23T04:56:07.000+00:00
        industry_id: 0
        company_id: company_id
        date_created: 2000-01-23T04:56:07.000+00:00
        stripe_account_id: stripe_account_id
        company_handle: company_handle
        credits_balance: 1
        stripe_account_status: stripe_account_status
        company_description: company_description
        company_domain: company_domain
        company_name: company_name
        accepted_eula: true
        country_id: 6
      properties:
        date_created:
          format: date-time
          type: string
        last_updated:
          format: date-time
          type: string
        company_id:
          type: string
        industry_id:
          format: int64
          type: integer
        country_id:
          format: int64
          type: integer
        company_name:
          type: string
        company_description:
          type: string
        company_handle:
          type: string
        company_domain:
          type: string
        credits_balance:
          description: Current balance of credits for this company (buyer)
          format: int64
          type: integer
        accepted_eula:
          type: boolean
        stripe_account_id:
          description: Stripe Connect account ID for marketplace sellers
          type: string
        stripe_account_status:
          description: "Status of the Stripe account (verified, pending, etc.)"
          type: string
      required:
      - company_domain
      - company_handle
      - credits_balance
    CompaniesInput:
      description: Input schema for creating Company
      properties:
        industry_id:
          format: int64
          type: integer
        country_id:
          format: int64
          type: integer
        company_name:
          type: string
        company_description:
          type: string
        company_handle:
          type: string
        company_domain:
          type: string
        credits_balance:
          description: Current balance of credits for this company (buyer)
          format: int64
          type: integer
        accepted_eula:
          type: boolean
        stripe_account_id:
          description: Stripe Connect account ID for marketplace sellers
          type: string
        stripe_account_status:
          description: "Status of the Stripe account (verified, pending, etc.)"
          type: string
      required:
      - company_domain
      - company_handle
    CompaniesUpdate:
      description: Update schema for modifying Company
      example:
        industry_id: 0
        company_description: company_description
        company_domain: company_domain
        stripe_account_id: stripe_account_id
        company_name: company_name
        company_handle: company_handle
        credits_balance: 1
        stripe_account_status: stripe_account_status
        accepted_eula: true
        country_id: 6
      properties:
        industry_id:
          format: int64
          type: integer
        country_id:
          format: int64
          type: integer
        company_name:
          type: string
        company_description:
          type: string
        company_handle:
          type: string
        company_domain:
          type: string
        credits_balance:
          description: Current balance of credits for this company (buyer)
          format: int64
          type: integer
        accepted_eula:
          type: boolean
        stripe_account_id:
          description: Stripe Connect account ID for marketplace sellers
          type: string
        stripe_account_status:
          description: "Status of the Stripe account (verified, pending, etc.)"
          type: string
    Connections:
      description: Model for every connection setup from our platform
      example:
        credential_type: SERVICE_ACCOUNT
        last_updated: 2000-01-23T04:56:07.000+00:00
        company_id: company_id
        verified_usage_ability: true
        connection_id: connection_id
        user_id: user_id
        engine_id: 0
        date_created: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        provider_domain: provider_domain
      properties:
        date_created:
          format: date-time
          type: string
        last_updated:
          format: date-time
          type: string
        connection_id:
          type: string
        user_id:
          type: string
        engine_id:
          format: int64
          type: integer
        company_id:
          type: string
        credential_type:
          description: "Enum type: CredentialType"
          enum:
          - SERVICE_ACCOUNT
          - USERNAME_PASSWORD
          - API_KEY
          - SERVICE_IDENTITY
          - ACCESS_KEY
          - NONE
          - OAUTH
          - JSON
          type: string
        name:
          type: string
        description:
          type: string
        provider_domain:
          type: string
        verified_usage_ability:
          type: boolean
      required:
      - company_id
      - engine_id
    ConnectionsInput:
      description: Input schema for creating Connection
      example:
        credential_type: SERVICE_ACCOUNT
        company_id: company_id
        verified_usage_ability: true
        user_id: user_id
        engine_id: 0
        name: name
        description: description
        provider_domain: provider_domain
      properties:
        user_id:
          type: string
        engine_id:
          format: int64
          type: integer
        company_id:
          type: string
        credential_type:
          description: "Enum type: CredentialType"
          enum:
          - SERVICE_ACCOUNT
          - USERNAME_PASSWORD
          - API_KEY
          - SERVICE_IDENTITY
          - ACCESS_KEY
          - NONE
          - OAUTH
          - JSON
          type: string
        name:
          type: string
        description:
          type: string
        provider_domain:
          type: string
        verified_usage_ability:
          type: boolean
      required:
      - company_id
      - engine_id
    ConnectionsUpdate:
      description: Update schema for modifying Connection
      example:
        credential_type: SERVICE_ACCOUNT
        company_id: company_id
        verified_usage_ability: true
        user_id: user_id
        engine_id: 0
        name: name
        description: description
        provider_domain: provider_domain
      properties:
        user_id:
          type: string
        engine_id:
          format: int64
          type: integer
        company_id:
          type: string
        credential_type:
          description: "Enum type: CredentialType"
          enum:
          - SERVICE_ACCOUNT
          - USERNAME_PASSWORD
          - API_KEY
          - SERVICE_IDENTITY
          - ACCESS_KEY
          - NONE
          - OAUTH
          - JSON
          type: string
        name:
          type: string
        description:
          type: string
        provider_domain:
          type: string
        verified_usage_ability:
          type: boolean
    Error:
      properties:
        code:
          description: Error code
          format: int32
          type: integer
        message:
          description: Error message
          type: string
        details:
          description: Additional error details
          type: string
        timestamp:
          description: When the error occurred
          format: date-time
          type: string
      required:
      - code
      - message
    Favorites:
      description: User favorites for marketplace assets
      example:
        last_updated: 2000-01-23T04:56:07.000+00:00
        notes: notes
        company_id: company_id
        user_id: user_id
        date_created: 2000-01-23T04:56:07.000+00:00
        favorite_id: 0
        asset_id: asset_id
        category: category
        priority: 6
      properties:
        date_created:
          format: date-time
          type: string
        last_updated:
          format: date-time
          type: string
        favorite_id:
          format: int64
          type: integer
        asset_id:
          type: string
        user_id:
          type: string
        company_id:
          type: string
        notes:
          description: Optional user notes about this favorite
          type: string
        category:
          description: "Optional category for organizing favorites (e.g., 'Work',\
            \ 'Research')"
          type: string
        priority:
          description: User-defined priority for sorting (higher = more important)
          format: int64
          type: integer
      required:
      - asset_id
      - company_id
      - priority
    FavoritesInput:
      description: Input schema for creating Favorite
      example:
        notes: notes
        company_id: company_id
        user_id: user_id
        asset_id: asset_id
        category: category
        priority: 0
      properties:
        asset_id:
          type: string
        user_id:
          type: string
        company_id:
          type: string
        notes:
          description: Optional user notes about this favorite
          type: string
        category:
          description: "Optional category for organizing favorites (e.g., 'Work',\
            \ 'Research')"
          type: string
        priority:
          description: User-defined priority for sorting (higher = more important)
          format: int64
          type: integer
      required:
      - asset_id
      - company_id
    FavoritesUpdate:
      description: Update schema for modifying Favorite
      example:
        notes: notes
        company_id: company_id
        user_id: user_id
        asset_id: asset_id
        category: category
        priority: 0
      properties:
        asset_id:
          type: string
        user_id:
          type: string
        company_id:
          type: string
        notes:
          description: Optional user notes about this favorite
          type: string
        category:
          description: "Optional category for organizing favorites (e.g., 'Work',\
            \ 'Research')"
          type: string
        priority:
          description: User-defined priority for sorting (higher = more important)
          format: int64
          type: integer
    JobFunctions:
      description: Metadata about the different kinds of job function our users have.
      example:
        last_updated: 2000-01-23T04:56:07.000+00:00
        date_created: 2000-01-23T04:56:07.000+00:00
        name: name
        function_id: 0
      properties:
        date_created:
          format: date-time
          type: string
        last_updated:
          format: date-time
          type: string
        function_id:
          format: int64
          type: integer
        name:
          type: string
      required:
      - function_id
      - name
    JobFunctionsInput:
      description: Input schema for creating JobFunction
      properties:
        name:
          type: string
      required:
      - name
    JobFunctionsUpdate:
      description: Update schema for modifying JobFunction
      properties:
        name:
          type: string
    Users:
      description: Individual users within a company with SOC2 authentication tracking
      example:
        last_updated: 2000-01-23T04:56:07.000+00:00
        email_address: email_address
        company_id: company_id
        user_id: user_id
        date_created: 2000-01-23T04:56:07.000+00:00
        timezone: timezone
        function_id: 0
        status: ACTIVE
      properties:
        date_created:
          format: date-time
          type: string
        last_updated:
          format: date-time
          type: string
        user_id:
          type: string
        company_id:
          type: string
        function_id:
          format: int64
          type: integer
        status:
          description: "Enum type: StatusCodes"
          enum:
          - ACTIVE
          - PENDING
          - INACTIVE
          - BANNED
          type: string
        email_address:
          type: string
        timezone:
          type: string
      required:
      - company_id
      - status
    UsersInput:
      description: Input schema for creating User
      example:
        email_address: email_address
        company_id: company_id
        timezone: timezone
        function_id: 0
        status: ACTIVE
      properties:
        company_id:
          type: string
        function_id:
          format: int64
          type: integer
        status:
          description: "Enum type: StatusCodes"
          enum:
          - ACTIVE
          - PENDING
          - INACTIVE
          - BANNED
          type: string
        email_address:
          type: string
        timezone:
          type: string
      required:
      - company_id
    UsersUpdate:
      description: Update schema for modifying User
      example:
        email_address: email_address
        company_id: company_id
        timezone: timezone
        function_id: 0
        status: ACTIVE
      properties:
        company_id:
          type: string
        function_id:
          format: int64
          type: integer
        status:
          description: "Enum type: StatusCodes"
          enum:
          - ACTIVE
          - PENDING
          - INACTIVE
          - BANNED
          type: string
        email_address:
          type: string
        timezone:
          type: string
    _analyze__company_handle__assets__asset_slug__get_200_response:
      example:
        data:
          industry_id: 6
          data_time_period_start: 2000-01-23T04:56:07.000+00:00
          viz_data_aggregation: No Aggregation
          allow_params: true
          viz_dep_var_col_name: viz_dep_var_col_name
          description: description
          source_table_name: source_table_name
          asset_id: asset_id
          source: MANUAL
          geographic_coverage_type: GLOBAL
          data_source_last_refreshed: 2000-01-23T04:56:07.000+00:00
          geographic_coverage_details: geographic_coverage_details
          next_run: 2000-01-23T04:56:07.000+00:00
          approved_by_user_id: approved_by_user_id
          data_time_period_end: 2000-01-23T04:56:07.000+00:00
          approved_at: 2000-01-23T04:56:07.000+00:00
          cached: true
          asset_type: CALCULATION
          viz_color_col_name: viz_color_col_name
          llm_connection_id: llm_connection_id
          viz_data_limit: 1
          slug: slug
          viz_sort_direction: No Sorting
          data_source_refresh_frequency: REAL_TIME
          last_updated: 2000-01-23T04:56:07.000+00:00
          snippet_id: 0
          company_id: company_id
          visibility: PRIVATE
          viz_size_col_name: viz_size_col_name
          date_created: 2000-01-23T04:56:07.000+00:00
          approval_status: approval_status
          sell_in_marketplace: true
          sql_logic: sql_logic
          viz_chart_library: PLOTLY
          viz_indep_var_col_name: viz_indep_var_col_name
          tags: tags
          ai_job_id: ai_job_id
          source_schema_name: source_schema_name
          schedule: schedule
          asset_schema: "{}"
          user_id: user_id
          connection_id: connection_id
          name: name
          viz_chart_type: LINE
          accept_terms: true
          viz_color_scheme: Default
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/Assets'
      required:
      - data
      - message
    _cloud_providers_get_200_response:
      example:
        data:
        - last_updated: 2000-01-23T04:56:07.000+00:00
          parent_company: parent_company
          marketing_homepage_url: marketing_homepage_url
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          provider_id: 0
        - last_updated: 2000-01-23T04:56:07.000+00:00
          parent_company: parent_company
          marketing_homepage_url: marketing_homepage_url
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          provider_id: 0
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          items:
            $ref: '#/components/schemas/CloudProviders'
          type: array
      required:
      - data
      - message
    _cloud_providers__provider_id__get_200_response:
      example:
        data:
          last_updated: 2000-01-23T04:56:07.000+00:00
          parent_company: parent_company
          marketing_homepage_url: marketing_homepage_url
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          provider_id: 0
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/CloudProviders'
      required:
      - data
      - message
    _cloud_providers__provider_id__storage_engines_get_200_response:
      example:
        data: "{}"
        message: success
      properties:
        message:
          example: success
          type: string
        data:
          type: object
      required:
      - message
    _companies__company_id__get_200_response:
      example:
        data:
          last_updated: 2000-01-23T04:56:07.000+00:00
          industry_id: 0
          company_id: company_id
          date_created: 2000-01-23T04:56:07.000+00:00
          stripe_account_id: stripe_account_id
          company_handle: company_handle
          credits_balance: 1
          stripe_account_status: stripe_account_status
          company_description: company_description
          company_domain: company_domain
          company_name: company_name
          accepted_eula: true
          country_id: 6
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/Companies'
      required:
      - data
      - message
    _companies__company_id__patch_200_response_data:
      example:
        company_id: company_id
      properties:
        company_id:
          description: ID of the updated companies
          type: string
      required:
      - company_id
    _companies__company_id__patch_200_response:
      example:
        data:
          company_id: company_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__patch_200_response_data'
      required:
      - data
      - message
    _companies__company_id__analytics_assets_get_200_response:
      example:
        data:
        - last_updated: 2000-01-23T04:56:07.000+00:00
          industry_id: 0
          company_id: company_id
          date_created: 2000-01-23T04:56:07.000+00:00
          stripe_account_id: stripe_account_id
          company_handle: company_handle
          credits_balance: 1
          stripe_account_status: stripe_account_status
          company_description: company_description
          company_domain: company_domain
          company_name: company_name
          accepted_eula: true
          country_id: 6
        - last_updated: 2000-01-23T04:56:07.000+00:00
          industry_id: 0
          company_id: company_id
          date_created: 2000-01-23T04:56:07.000+00:00
          stripe_account_id: stripe_account_id
          company_handle: company_handle
          credits_balance: 1
          stripe_account_status: stripe_account_status
          company_description: company_description
          company_domain: company_domain
          company_name: company_name
          accepted_eula: true
          country_id: 6
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          items:
            $ref: '#/components/schemas/Companies'
          type: array
      required:
      - data
      - message
    _companies__company_id__api_keys_get_200_response:
      example:
        data:
        - last_updated: 2000-01-23T04:56:07.000+00:00
          company_id: company_id
          expiration_date_utc: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          role_id: 6
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          api_key_id: 0
        - last_updated: 2000-01-23T04:56:07.000+00:00
          company_id: company_id
          expiration_date_utc: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          role_id: 6
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          api_key_id: 0
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          items:
            $ref: '#/components/schemas/ApiKeys'
          type: array
      required:
      - data
      - message
    _companies__company_id__api_keys_post_200_response_data:
      example:
        api_key_id: api_key_id
      properties:
        api_key_id:
          description: ID of the created api_keys
          type: string
      required:
      - api_key_id
    _companies__company_id__api_keys_post_200_response:
      example:
        data:
          api_key_id: api_key_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__api_keys_post_200_response_data'
      required:
      - data
      - message
    _companies__company_id__api_keys__api_key_id__get_200_response:
      example:
        data:
          last_updated: 2000-01-23T04:56:07.000+00:00
          company_id: company_id
          expiration_date_utc: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          role_id: 6
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          api_key_id: 0
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/ApiKeys'
      required:
      - data
      - message
    _companies__company_id__api_keys__api_key_id__delete_200_response_data:
      example:
        api_key_id: api_key_id
      properties:
        api_key_id:
          description: ID of the deleted api_keys
          type: string
      required:
      - api_key_id
    _companies__company_id__api_keys__api_key_id__delete_200_response:
      example:
        data:
          api_key_id: api_key_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__api_keys__api_key_id__delete_200_response_data'
      required:
      - data
      - message
    _companies__company_id__api_keys__api_key_id__patch_200_response_data:
      example:
        api_key_id: api_key_id
      properties:
        api_key_id:
          description: ID of the updated api_keys
          type: string
      required:
      - api_key_id
    _companies__company_id__api_keys__api_key_id__patch_200_response:
      example:
        data:
          api_key_id: api_key_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__api_keys__api_key_id__patch_200_response_data'
      required:
      - data
      - message
    _companies__company_id__assets_get_200_response:
      example:
        data:
        - industry_id: 6
          data_time_period_start: 2000-01-23T04:56:07.000+00:00
          viz_data_aggregation: No Aggregation
          allow_params: true
          viz_dep_var_col_name: viz_dep_var_col_name
          description: description
          source_table_name: source_table_name
          asset_id: asset_id
          source: MANUAL
          geographic_coverage_type: GLOBAL
          data_source_last_refreshed: 2000-01-23T04:56:07.000+00:00
          geographic_coverage_details: geographic_coverage_details
          next_run: 2000-01-23T04:56:07.000+00:00
          approved_by_user_id: approved_by_user_id
          data_time_period_end: 2000-01-23T04:56:07.000+00:00
          approved_at: 2000-01-23T04:56:07.000+00:00
          cached: true
          asset_type: CALCULATION
          viz_color_col_name: viz_color_col_name
          llm_connection_id: llm_connection_id
          viz_data_limit: 1
          slug: slug
          viz_sort_direction: No Sorting
          data_source_refresh_frequency: REAL_TIME
          last_updated: 2000-01-23T04:56:07.000+00:00
          snippet_id: 0
          company_id: company_id
          visibility: PRIVATE
          viz_size_col_name: viz_size_col_name
          date_created: 2000-01-23T04:56:07.000+00:00
          approval_status: approval_status
          sell_in_marketplace: true
          sql_logic: sql_logic
          viz_chart_library: PLOTLY
          viz_indep_var_col_name: viz_indep_var_col_name
          tags: tags
          ai_job_id: ai_job_id
          source_schema_name: source_schema_name
          schedule: schedule
          asset_schema: "{}"
          user_id: user_id
          connection_id: connection_id
          name: name
          viz_chart_type: LINE
          accept_terms: true
          viz_color_scheme: Default
        - industry_id: 6
          data_time_period_start: 2000-01-23T04:56:07.000+00:00
          viz_data_aggregation: No Aggregation
          allow_params: true
          viz_dep_var_col_name: viz_dep_var_col_name
          description: description
          source_table_name: source_table_name
          asset_id: asset_id
          source: MANUAL
          geographic_coverage_type: GLOBAL
          data_source_last_refreshed: 2000-01-23T04:56:07.000+00:00
          geographic_coverage_details: geographic_coverage_details
          next_run: 2000-01-23T04:56:07.000+00:00
          approved_by_user_id: approved_by_user_id
          data_time_period_end: 2000-01-23T04:56:07.000+00:00
          approved_at: 2000-01-23T04:56:07.000+00:00
          cached: true
          asset_type: CALCULATION
          viz_color_col_name: viz_color_col_name
          llm_connection_id: llm_connection_id
          viz_data_limit: 1
          slug: slug
          viz_sort_direction: No Sorting
          data_source_refresh_frequency: REAL_TIME
          last_updated: 2000-01-23T04:56:07.000+00:00
          snippet_id: 0
          company_id: company_id
          visibility: PRIVATE
          viz_size_col_name: viz_size_col_name
          date_created: 2000-01-23T04:56:07.000+00:00
          approval_status: approval_status
          sell_in_marketplace: true
          sql_logic: sql_logic
          viz_chart_library: PLOTLY
          viz_indep_var_col_name: viz_indep_var_col_name
          tags: tags
          ai_job_id: ai_job_id
          source_schema_name: source_schema_name
          schedule: schedule
          asset_schema: "{}"
          user_id: user_id
          connection_id: connection_id
          name: name
          viz_chart_type: LINE
          accept_terms: true
          viz_color_scheme: Default
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          items:
            $ref: '#/components/schemas/Assets'
          type: array
      required:
      - data
      - message
    _companies__company_id__assets_post_200_response_data:
      example:
        asset_id: asset_id
      properties:
        asset_id:
          description: ID of the created assets
          type: string
      required:
      - asset_id
    _companies__company_id__assets_post_200_response:
      example:
        data:
          asset_id: asset_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__assets_post_200_response_data'
      required:
      - data
      - message
    _companies__company_id__assets__asset_id__delete_200_response_data:
      example:
        asset_id: asset_id
      properties:
        asset_id:
          description: ID of the deleted assets
          type: string
      required:
      - asset_id
    _companies__company_id__assets__asset_id__delete_200_response:
      example:
        data:
          asset_id: asset_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__assets__asset_id__delete_200_response_data'
      required:
      - data
      - message
    _companies__company_id__assets__asset_id__patch_200_response_data:
      example:
        asset_id: asset_id
      properties:
        asset_id:
          description: ID of the updated assets
          type: string
      required:
      - asset_id
    _companies__company_id__assets__asset_id__patch_200_response:
      example:
        data:
          asset_id: asset_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__assets__asset_id__patch_200_response_data'
      required:
      - data
      - message
    _companies__company_id__assets__asset_id__prices_get_200_response:
      example:
        data:
        - aph_id: aph_id
          price_usd: 0.8008281904610115
          last_updated: 2000-01-23T04:56:07.000+00:00
          date_ended: 2000-01-23T04:56:07.000+00:00
          date_created: 2000-01-23T04:56:07.000+00:00
          asset_id: asset_id
        - aph_id: aph_id
          price_usd: 0.8008281904610115
          last_updated: 2000-01-23T04:56:07.000+00:00
          date_ended: 2000-01-23T04:56:07.000+00:00
          date_created: 2000-01-23T04:56:07.000+00:00
          asset_id: asset_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          items:
            $ref: '#/components/schemas/AssetPriceHistory'
          type: array
      required:
      - data
      - message
    _companies__company_id__assets__asset_id__prices_post_200_response_data:
      example:
        aph_id: aph_id
      properties:
        aph_id:
          description: ID of the created asset_price_history
          type: string
      required:
      - aph_id
    _companies__company_id__assets__asset_id__prices_post_200_response:
      example:
        data:
          aph_id: aph_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__assets__asset_id__prices_post_200_response_data'
      required:
      - data
      - message
    _companies__company_id__assets__asset_id__prices__aph_id__get_200_response:
      example:
        data:
          aph_id: aph_id
          price_usd: 0.8008281904610115
          last_updated: 2000-01-23T04:56:07.000+00:00
          date_ended: 2000-01-23T04:56:07.000+00:00
          date_created: 2000-01-23T04:56:07.000+00:00
          asset_id: asset_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/AssetPriceHistory'
      required:
      - data
      - message
    _companies__company_id__assets__asset_id__prices__aph_id__delete_200_response_data:
      example:
        aph_id: aph_id
      properties:
        aph_id:
          description: ID of the deleted asset_price_history
          type: string
      required:
      - aph_id
    _companies__company_id__assets__asset_id__prices__aph_id__delete_200_response:
      example:
        data:
          aph_id: aph_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__assets__asset_id__prices__aph_id__delete_200_response_data'
      required:
      - data
      - message
    _companies__company_id__assets__asset_id__prices__aph_id__patch_200_response_data:
      example:
        aph_id: aph_id
      properties:
        aph_id:
          description: ID of the updated asset_price_history
          type: string
      required:
      - aph_id
    _companies__company_id__assets__asset_id__prices__aph_id__patch_200_response:
      example:
        data:
          aph_id: aph_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__assets__asset_id__prices__aph_id__patch_200_response_data'
      required:
      - data
      - message
    _companies__company_id__connections_get_200_response:
      example:
        data:
        - credential_type: SERVICE_ACCOUNT
          last_updated: 2000-01-23T04:56:07.000+00:00
          company_id: company_id
          verified_usage_ability: true
          connection_id: connection_id
          user_id: user_id
          engine_id: 0
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          provider_domain: provider_domain
        - credential_type: SERVICE_ACCOUNT
          last_updated: 2000-01-23T04:56:07.000+00:00
          company_id: company_id
          verified_usage_ability: true
          connection_id: connection_id
          user_id: user_id
          engine_id: 0
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          provider_domain: provider_domain
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          items:
            $ref: '#/components/schemas/Connections'
          type: array
      required:
      - data
      - message
    _companies__company_id__connections_post_200_response_data:
      example:
        connection_id: connection_id
      properties:
        connection_id:
          description: ID of the created connections
          type: string
      required:
      - connection_id
    _companies__company_id__connections_post_200_response:
      example:
        data:
          connection_id: connection_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__connections_post_200_response_data'
      required:
      - data
      - message
    _companies__company_id__connections__connection_id__get_200_response:
      example:
        data:
          credential_type: SERVICE_ACCOUNT
          last_updated: 2000-01-23T04:56:07.000+00:00
          company_id: company_id
          verified_usage_ability: true
          connection_id: connection_id
          user_id: user_id
          engine_id: 0
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          provider_domain: provider_domain
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/Connections'
      required:
      - data
      - message
    _companies__company_id__connections__connection_id__delete_200_response_data:
      example:
        connection_id: connection_id
      properties:
        connection_id:
          description: ID of the deleted connections
          type: string
      required:
      - connection_id
    _companies__company_id__connections__connection_id__delete_200_response:
      example:
        data:
          connection_id: connection_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__connections__connection_id__delete_200_response_data'
      required:
      - data
      - message
    _companies__company_id__connections__connection_id__patch_200_response_data:
      example:
        connection_id: connection_id
      properties:
        connection_id:
          description: ID of the updated connections
          type: string
      required:
      - connection_id
    _companies__company_id__connections__connection_id__patch_200_response:
      example:
        data:
          connection_id: connection_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__connections__connection_id__patch_200_response_data'
      required:
      - data
      - message
    _companies__company_id__users_get_200_response:
      example:
        data:
        - last_updated: 2000-01-23T04:56:07.000+00:00
          email_address: email_address
          company_id: company_id
          user_id: user_id
          date_created: 2000-01-23T04:56:07.000+00:00
          timezone: timezone
          function_id: 0
          status: ACTIVE
        - last_updated: 2000-01-23T04:56:07.000+00:00
          email_address: email_address
          company_id: company_id
          user_id: user_id
          date_created: 2000-01-23T04:56:07.000+00:00
          timezone: timezone
          function_id: 0
          status: ACTIVE
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          items:
            $ref: '#/components/schemas/Users'
          type: array
      required:
      - data
      - message
    _companies__company_id__users_post_200_response_data:
      example:
        user_id: user_id
      properties:
        user_id:
          description: ID of the created users
          type: string
      required:
      - user_id
    _companies__company_id__users_post_200_response:
      example:
        data:
          user_id: user_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__users_post_200_response_data'
      required:
      - data
      - message
    _companies__company_id__users__user_id__get_200_response:
      example:
        data:
          last_updated: 2000-01-23T04:56:07.000+00:00
          email_address: email_address
          company_id: company_id
          user_id: user_id
          date_created: 2000-01-23T04:56:07.000+00:00
          timezone: timezone
          function_id: 0
          status: ACTIVE
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/Users'
      required:
      - data
      - message
    _companies__company_id__users__user_id__delete_200_response_data:
      example:
        user_id: user_id
      properties:
        user_id:
          description: ID of the deleted users
          type: string
      required:
      - user_id
    _companies__company_id__users__user_id__delete_200_response:
      example:
        data:
          user_id: user_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__users__user_id__delete_200_response_data'
      required:
      - data
      - message
    _companies__company_id__users__user_id__patch_200_response_data:
      example:
        user_id: user_id
      properties:
        user_id:
          description: ID of the updated users
          type: string
      required:
      - user_id
    _companies__company_id__users__user_id__patch_200_response:
      example:
        data:
          user_id: user_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__users__user_id__patch_200_response_data'
      required:
      - data
      - message
    _companies__company_id__users__user_id__alerts_get_200_response:
      example:
        data:
        - last_updated: 2000-01-23T04:56:07.000+00:00
          is_active: true
          company_id: company_id
          user_id: user_id
          date_created: 2000-01-23T04:56:07.000+00:00
          alert_id: 0
          asset_id: asset_id
        - last_updated: 2000-01-23T04:56:07.000+00:00
          is_active: true
          company_id: company_id
          user_id: user_id
          date_created: 2000-01-23T04:56:07.000+00:00
          alert_id: 0
          asset_id: asset_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          items:
            $ref: '#/components/schemas/Alerts'
          type: array
      required:
      - data
      - message
    _companies__company_id__users__user_id__alerts_post_200_response_data:
      example:
        alert_id: alert_id
      properties:
        alert_id:
          description: ID of the created alerts
          type: string
      required:
      - alert_id
    _companies__company_id__users__user_id__alerts_post_200_response:
      example:
        data:
          alert_id: alert_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__users__user_id__alerts_post_200_response_data'
      required:
      - data
      - message
    _companies__company_id__users__user_id__alerts_asset__asset_id__get_200_response:
      example:
        data:
          last_updated: 2000-01-23T04:56:07.000+00:00
          is_active: true
          company_id: company_id
          user_id: user_id
          date_created: 2000-01-23T04:56:07.000+00:00
          alert_id: 0
          asset_id: asset_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/Alerts'
      required:
      - data
      - message
    _companies__company_id__users__user_id__alerts__alert_id__delete_200_response_data:
      example:
        alert_id: alert_id
      properties:
        alert_id:
          description: ID of the deleted alerts
          type: string
      required:
      - alert_id
    _companies__company_id__users__user_id__alerts__alert_id__delete_200_response:
      example:
        data:
          alert_id: alert_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__users__user_id__alerts__alert_id__delete_200_response_data'
      required:
      - data
      - message
    _companies__company_id__users__user_id__alerts__alert_id__patch_200_response_data:
      example:
        alert_id: alert_id
      properties:
        alert_id:
          description: ID of the updated alerts
          type: string
      required:
      - alert_id
    _companies__company_id__users__user_id__alerts__alert_id__patch_200_response:
      example:
        data:
          alert_id: alert_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__users__user_id__alerts__alert_id__patch_200_response_data'
      required:
      - data
      - message
    _companies__company_id__users__user_id__favorites_get_200_response:
      example:
        data:
        - last_updated: 2000-01-23T04:56:07.000+00:00
          notes: notes
          company_id: company_id
          user_id: user_id
          date_created: 2000-01-23T04:56:07.000+00:00
          favorite_id: 0
          asset_id: asset_id
          category: category
          priority: 6
        - last_updated: 2000-01-23T04:56:07.000+00:00
          notes: notes
          company_id: company_id
          user_id: user_id
          date_created: 2000-01-23T04:56:07.000+00:00
          favorite_id: 0
          asset_id: asset_id
          category: category
          priority: 6
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          items:
            $ref: '#/components/schemas/Favorites'
          type: array
      required:
      - data
      - message
    _companies__company_id__users__user_id__favorites_post_200_response_data:
      example:
        favorite_id: favorite_id
      properties:
        favorite_id:
          description: ID of the created favorites
          type: string
      required:
      - favorite_id
    _companies__company_id__users__user_id__favorites_post_200_response:
      example:
        data:
          favorite_id: favorite_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__users__user_id__favorites_post_200_response_data'
      required:
      - data
      - message
    _companies__company_id__users__user_id__favorites_category__category__get_200_response:
      example:
        data:
          last_updated: 2000-01-23T04:56:07.000+00:00
          notes: notes
          company_id: company_id
          user_id: user_id
          date_created: 2000-01-23T04:56:07.000+00:00
          favorite_id: 0
          asset_id: asset_id
          category: category
          priority: 6
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/Favorites'
      required:
      - data
      - message
    _companies__company_id__users__user_id__favorites__favorite_id__delete_200_response_data:
      example:
        favorite_id: favorite_id
      properties:
        favorite_id:
          description: ID of the deleted favorites
          type: string
      required:
      - favorite_id
    _companies__company_id__users__user_id__favorites__favorite_id__delete_200_response:
      example:
        data:
          favorite_id: favorite_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__users__user_id__favorites__favorite_id__delete_200_response_data'
      required:
      - data
      - message
    _companies__company_id__users__user_id__favorites__favorite_id__patch_200_response_data:
      example:
        favorite_id: favorite_id
      properties:
        favorite_id:
          description: ID of the updated favorites
          type: string
      required:
      - favorite_id
    _companies__company_id__users__user_id__favorites__favorite_id__patch_200_response:
      example:
        data:
          favorite_id: favorite_id
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/_companies__company_id__users__user_id__favorites__favorite_id__patch_200_response_data'
      required:
      - data
      - message
    _job_functions_get_200_response:
      example:
        data:
        - last_updated: 2000-01-23T04:56:07.000+00:00
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          function_id: 0
        - last_updated: 2000-01-23T04:56:07.000+00:00
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          function_id: 0
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          items:
            $ref: '#/components/schemas/JobFunctions'
          type: array
      required:
      - data
      - message
    _job_functions__function_id__get_200_response:
      example:
        data:
          last_updated: 2000-01-23T04:56:07.000+00:00
          date_created: 2000-01-23T04:56:07.000+00:00
          name: name
          function_id: 0
        message: success
      properties:
        message:
          description: Response status message
          example: success
          type: string
        data:
          $ref: '#/components/schemas/JobFunctions'
      required:
      - data
      - message
    inline_object:
      example:
        code: 400
        message: message
        errors:
          key:
          - errors
          - errors
      properties:
        code:
          example: 400
          type: integer
        message:
          type: string
        errors:
          additionalProperties:
            items:
              type: string
    inline_object_1:
      example:
        code: 401
        message: Authentication required
      properties:
        code:
          example: 401
          type: integer
        message:
          example: Authentication required
          type: string
    inline_object_2:
      example:
        code: 403
        message: Insufficient permissions
      properties:
        code:
          example: 403
          type: integer
        message:
          example: Insufficient permissions
          type: string
    inline_object_3:
      example:
        code: 404
        message: Resource not found
      properties:
        code:
          example: 404
          type: integer
        message:
          example: Resource not found
          type: string
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: x-api-key
      type: apiKey
