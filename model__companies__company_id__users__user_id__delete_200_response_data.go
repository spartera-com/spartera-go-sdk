/*
Spartera API Documentation

Auto-generated API documentation for REST services of the Spartera platform

API version: 0.0.0
Contact: support@spartera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sparteraapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CompaniesCompanyIdUsersUserIdDelete200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompaniesCompanyIdUsersUserIdDelete200ResponseData{}

// CompaniesCompanyIdUsersUserIdDelete200ResponseData struct for CompaniesCompanyIdUsersUserIdDelete200ResponseData
type CompaniesCompanyIdUsersUserIdDelete200ResponseData struct {
	// ID of the deleted users
	UserId string `json:"user_id"`
}

type _CompaniesCompanyIdUsersUserIdDelete200ResponseData CompaniesCompanyIdUsersUserIdDelete200ResponseData

// NewCompaniesCompanyIdUsersUserIdDelete200ResponseData instantiates a new CompaniesCompanyIdUsersUserIdDelete200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompaniesCompanyIdUsersUserIdDelete200ResponseData(userId string) *CompaniesCompanyIdUsersUserIdDelete200ResponseData {
	this := CompaniesCompanyIdUsersUserIdDelete200ResponseData{}
	this.UserId = userId
	return &this
}

// NewCompaniesCompanyIdUsersUserIdDelete200ResponseDataWithDefaults instantiates a new CompaniesCompanyIdUsersUserIdDelete200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompaniesCompanyIdUsersUserIdDelete200ResponseDataWithDefaults() *CompaniesCompanyIdUsersUserIdDelete200ResponseData {
	this := CompaniesCompanyIdUsersUserIdDelete200ResponseData{}
	return &this
}

// GetUserId returns the UserId field value
func (o *CompaniesCompanyIdUsersUserIdDelete200ResponseData) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *CompaniesCompanyIdUsersUserIdDelete200ResponseData) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *CompaniesCompanyIdUsersUserIdDelete200ResponseData) SetUserId(v string) {
	o.UserId = v
}

func (o CompaniesCompanyIdUsersUserIdDelete200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompaniesCompanyIdUsersUserIdDelete200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_id"] = o.UserId
	return toSerialize, nil
}

func (o *CompaniesCompanyIdUsersUserIdDelete200ResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompaniesCompanyIdUsersUserIdDelete200ResponseData := _CompaniesCompanyIdUsersUserIdDelete200ResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompaniesCompanyIdUsersUserIdDelete200ResponseData)

	if err != nil {
		return err
	}

	*o = CompaniesCompanyIdUsersUserIdDelete200ResponseData(varCompaniesCompanyIdUsersUserIdDelete200ResponseData)

	return err
}

type NullableCompaniesCompanyIdUsersUserIdDelete200ResponseData struct {
	value *CompaniesCompanyIdUsersUserIdDelete200ResponseData
	isSet bool
}

func (v NullableCompaniesCompanyIdUsersUserIdDelete200ResponseData) Get() *CompaniesCompanyIdUsersUserIdDelete200ResponseData {
	return v.value
}

func (v *NullableCompaniesCompanyIdUsersUserIdDelete200ResponseData) Set(val *CompaniesCompanyIdUsersUserIdDelete200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCompaniesCompanyIdUsersUserIdDelete200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCompaniesCompanyIdUsersUserIdDelete200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompaniesCompanyIdUsersUserIdDelete200ResponseData(val *CompaniesCompanyIdUsersUserIdDelete200ResponseData) *NullableCompaniesCompanyIdUsersUserIdDelete200ResponseData {
	return &NullableCompaniesCompanyIdUsersUserIdDelete200ResponseData{value: val, isSet: true}
}

func (v NullableCompaniesCompanyIdUsersUserIdDelete200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompaniesCompanyIdUsersUserIdDelete200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


