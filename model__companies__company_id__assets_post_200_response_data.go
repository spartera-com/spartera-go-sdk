/*
Spartera API Documentation

Auto-generated API documentation for REST services of the Spartera platform

API version: 0.0.0
Contact: support@spartera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sparteraapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CompaniesCompanyIdAssetsPost200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompaniesCompanyIdAssetsPost200ResponseData{}

// CompaniesCompanyIdAssetsPost200ResponseData struct for CompaniesCompanyIdAssetsPost200ResponseData
type CompaniesCompanyIdAssetsPost200ResponseData struct {
	// ID of the created assets
	AssetId string `json:"asset_id"`
}

type _CompaniesCompanyIdAssetsPost200ResponseData CompaniesCompanyIdAssetsPost200ResponseData

// NewCompaniesCompanyIdAssetsPost200ResponseData instantiates a new CompaniesCompanyIdAssetsPost200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompaniesCompanyIdAssetsPost200ResponseData(assetId string) *CompaniesCompanyIdAssetsPost200ResponseData {
	this := CompaniesCompanyIdAssetsPost200ResponseData{}
	this.AssetId = assetId
	return &this
}

// NewCompaniesCompanyIdAssetsPost200ResponseDataWithDefaults instantiates a new CompaniesCompanyIdAssetsPost200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompaniesCompanyIdAssetsPost200ResponseDataWithDefaults() *CompaniesCompanyIdAssetsPost200ResponseData {
	this := CompaniesCompanyIdAssetsPost200ResponseData{}
	return &this
}

// GetAssetId returns the AssetId field value
func (o *CompaniesCompanyIdAssetsPost200ResponseData) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *CompaniesCompanyIdAssetsPost200ResponseData) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *CompaniesCompanyIdAssetsPost200ResponseData) SetAssetId(v string) {
	o.AssetId = v
}

func (o CompaniesCompanyIdAssetsPost200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompaniesCompanyIdAssetsPost200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset_id"] = o.AssetId
	return toSerialize, nil
}

func (o *CompaniesCompanyIdAssetsPost200ResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"asset_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompaniesCompanyIdAssetsPost200ResponseData := _CompaniesCompanyIdAssetsPost200ResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompaniesCompanyIdAssetsPost200ResponseData)

	if err != nil {
		return err
	}

	*o = CompaniesCompanyIdAssetsPost200ResponseData(varCompaniesCompanyIdAssetsPost200ResponseData)

	return err
}

type NullableCompaniesCompanyIdAssetsPost200ResponseData struct {
	value *CompaniesCompanyIdAssetsPost200ResponseData
	isSet bool
}

func (v NullableCompaniesCompanyIdAssetsPost200ResponseData) Get() *CompaniesCompanyIdAssetsPost200ResponseData {
	return v.value
}

func (v *NullableCompaniesCompanyIdAssetsPost200ResponseData) Set(val *CompaniesCompanyIdAssetsPost200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCompaniesCompanyIdAssetsPost200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCompaniesCompanyIdAssetsPost200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompaniesCompanyIdAssetsPost200ResponseData(val *CompaniesCompanyIdAssetsPost200ResponseData) *NullableCompaniesCompanyIdAssetsPost200ResponseData {
	return &NullableCompaniesCompanyIdAssetsPost200ResponseData{value: val, isSet: true}
}

func (v NullableCompaniesCompanyIdAssetsPost200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompaniesCompanyIdAssetsPost200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


