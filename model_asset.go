/*
Spartera API Documentation

Auto-generated API documentation for REST services of the Spartera platform

API version: 0.0.0
Contact: support@spartera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sparteraapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Asset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Asset{}

// Asset Asset model for every asset (insight/visualization/feed/etc.) customer creates
type Asset struct {
	AssetId *string `json:"asset_id,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	CompanyId string `json:"company_id"`
	ConnectionId *string `json:"connection_id,omitempty"`
	LlmConnectionId *string `json:"llm_connection_id,omitempty"`
	SnippetId *string `json:"snippet_id,omitempty"`
	IndustryId *string `json:"industry_id,omitempty"`
	AiJobId *string `json:"ai_job_id,omitempty"`
	ApprovalStatus *string `json:"approval_status,omitempty"`
	ApprovedByUserId *string `json:"approved_by_user_id,omitempty"`
	ApprovedAt *string `json:"approved_at,omitempty"`
	Name string `json:"name"`
	Slug *string `json:"slug,omitempty"`
	Description *string `json:"description,omitempty"`
	Source string `json:"source"`
	AssetType *string `json:"asset_type,omitempty"`
	AssetSchema *string `json:"asset_schema,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Tags *string `json:"tags,omitempty"`
	SqlLogic *string `json:"sql_logic,omitempty"`
	SourceSchemaName *string `json:"source_schema_name,omitempty"`
	SourceTableName *string `json:"source_table_name,omitempty"`
	SellInMarketplace *string `json:"sell_in_marketplace,omitempty"`
	VizChartLibrary *string `json:"viz_chart_library,omitempty"`
	VizChartType *string `json:"viz_chart_type,omitempty"`
	VizDepVarColName *string `json:"viz_dep_var_col_name,omitempty"`
	VizIndepVarColName *string `json:"viz_indep_var_col_name,omitempty"`
	VizSizeColName *string `json:"viz_size_col_name,omitempty"`
	VizColorColName *string `json:"viz_color_col_name,omitempty"`
	VizDataAggregation *string `json:"viz_data_aggregation,omitempty"`
	VizSortDirection *string `json:"viz_sort_direction,omitempty"`
	VizDataLimit *string `json:"viz_data_limit,omitempty"`
	VizColorScheme *string `json:"viz_color_scheme,omitempty"`
	AllowParams *string `json:"allow_params,omitempty"`
	AcceptTerms *string `json:"accept_terms,omitempty"`
	Cached *string `json:"cached,omitempty"`
	Schedule *string `json:"schedule,omitempty"`
	NextRun *string `json:"next_run,omitempty"`
	DataTimePeriodStart *string `json:"data_time_period_start,omitempty"`
	DataTimePeriodEnd *string `json:"data_time_period_end,omitempty"`
	GeographicCoverageType *string `json:"geographic_coverage_type,omitempty"`
	GeographicCoverageDetails *string `json:"geographic_coverage_details,omitempty"`
	DataSourceRefreshFrequency *string `json:"data_source_refresh_frequency,omitempty"`
	DataSourceLastRefreshed *string `json:"data_source_last_refreshed,omitempty"`
	DateCreated *string `json:"date_created,omitempty"`
	LastUpdated *string `json:"last_updated,omitempty"`
	Active *string `json:"active,omitempty"`
}

type _Asset Asset

// NewAsset instantiates a new Asset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAsset(companyId string, name string, source string) *Asset {
	this := Asset{}
	this.CompanyId = companyId
	this.Name = name
	this.Source = source
	return &this
}

// NewAssetWithDefaults instantiates a new Asset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetWithDefaults() *Asset {
	this := Asset{}
	return &this
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *Asset) GetAssetId() string {
	if o == nil || IsNil(o.AssetId) {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetAssetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssetId) {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *Asset) HasAssetId() bool {
	if o != nil && !IsNil(o.AssetId) {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *Asset) SetAssetId(v string) {
	o.AssetId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Asset) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Asset) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Asset) SetUserId(v string) {
	o.UserId = &v
}

// GetCompanyId returns the CompanyId field value
func (o *Asset) GetCompanyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value
// and a boolean to check if the value has been set.
func (o *Asset) GetCompanyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyId, true
}

// SetCompanyId sets field value
func (o *Asset) SetCompanyId(v string) {
	o.CompanyId = v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *Asset) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *Asset) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *Asset) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetLlmConnectionId returns the LlmConnectionId field value if set, zero value otherwise.
func (o *Asset) GetLlmConnectionId() string {
	if o == nil || IsNil(o.LlmConnectionId) {
		var ret string
		return ret
	}
	return *o.LlmConnectionId
}

// GetLlmConnectionIdOk returns a tuple with the LlmConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetLlmConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.LlmConnectionId) {
		return nil, false
	}
	return o.LlmConnectionId, true
}

// HasLlmConnectionId returns a boolean if a field has been set.
func (o *Asset) HasLlmConnectionId() bool {
	if o != nil && !IsNil(o.LlmConnectionId) {
		return true
	}

	return false
}

// SetLlmConnectionId gets a reference to the given string and assigns it to the LlmConnectionId field.
func (o *Asset) SetLlmConnectionId(v string) {
	o.LlmConnectionId = &v
}

// GetSnippetId returns the SnippetId field value if set, zero value otherwise.
func (o *Asset) GetSnippetId() string {
	if o == nil || IsNil(o.SnippetId) {
		var ret string
		return ret
	}
	return *o.SnippetId
}

// GetSnippetIdOk returns a tuple with the SnippetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetSnippetIdOk() (*string, bool) {
	if o == nil || IsNil(o.SnippetId) {
		return nil, false
	}
	return o.SnippetId, true
}

// HasSnippetId returns a boolean if a field has been set.
func (o *Asset) HasSnippetId() bool {
	if o != nil && !IsNil(o.SnippetId) {
		return true
	}

	return false
}

// SetSnippetId gets a reference to the given string and assigns it to the SnippetId field.
func (o *Asset) SetSnippetId(v string) {
	o.SnippetId = &v
}

// GetIndustryId returns the IndustryId field value if set, zero value otherwise.
func (o *Asset) GetIndustryId() string {
	if o == nil || IsNil(o.IndustryId) {
		var ret string
		return ret
	}
	return *o.IndustryId
}

// GetIndustryIdOk returns a tuple with the IndustryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetIndustryIdOk() (*string, bool) {
	if o == nil || IsNil(o.IndustryId) {
		return nil, false
	}
	return o.IndustryId, true
}

// HasIndustryId returns a boolean if a field has been set.
func (o *Asset) HasIndustryId() bool {
	if o != nil && !IsNil(o.IndustryId) {
		return true
	}

	return false
}

// SetIndustryId gets a reference to the given string and assigns it to the IndustryId field.
func (o *Asset) SetIndustryId(v string) {
	o.IndustryId = &v
}

// GetAiJobId returns the AiJobId field value if set, zero value otherwise.
func (o *Asset) GetAiJobId() string {
	if o == nil || IsNil(o.AiJobId) {
		var ret string
		return ret
	}
	return *o.AiJobId
}

// GetAiJobIdOk returns a tuple with the AiJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetAiJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.AiJobId) {
		return nil, false
	}
	return o.AiJobId, true
}

// HasAiJobId returns a boolean if a field has been set.
func (o *Asset) HasAiJobId() bool {
	if o != nil && !IsNil(o.AiJobId) {
		return true
	}

	return false
}

// SetAiJobId gets a reference to the given string and assigns it to the AiJobId field.
func (o *Asset) SetAiJobId(v string) {
	o.AiJobId = &v
}

// GetApprovalStatus returns the ApprovalStatus field value if set, zero value otherwise.
func (o *Asset) GetApprovalStatus() string {
	if o == nil || IsNil(o.ApprovalStatus) {
		var ret string
		return ret
	}
	return *o.ApprovalStatus
}

// GetApprovalStatusOk returns a tuple with the ApprovalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetApprovalStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalStatus) {
		return nil, false
	}
	return o.ApprovalStatus, true
}

// HasApprovalStatus returns a boolean if a field has been set.
func (o *Asset) HasApprovalStatus() bool {
	if o != nil && !IsNil(o.ApprovalStatus) {
		return true
	}

	return false
}

// SetApprovalStatus gets a reference to the given string and assigns it to the ApprovalStatus field.
func (o *Asset) SetApprovalStatus(v string) {
	o.ApprovalStatus = &v
}

// GetApprovedByUserId returns the ApprovedByUserId field value if set, zero value otherwise.
func (o *Asset) GetApprovedByUserId() string {
	if o == nil || IsNil(o.ApprovedByUserId) {
		var ret string
		return ret
	}
	return *o.ApprovedByUserId
}

// GetApprovedByUserIdOk returns a tuple with the ApprovedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetApprovedByUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovedByUserId) {
		return nil, false
	}
	return o.ApprovedByUserId, true
}

// HasApprovedByUserId returns a boolean if a field has been set.
func (o *Asset) HasApprovedByUserId() bool {
	if o != nil && !IsNil(o.ApprovedByUserId) {
		return true
	}

	return false
}

// SetApprovedByUserId gets a reference to the given string and assigns it to the ApprovedByUserId field.
func (o *Asset) SetApprovedByUserId(v string) {
	o.ApprovedByUserId = &v
}

// GetApprovedAt returns the ApprovedAt field value if set, zero value otherwise.
func (o *Asset) GetApprovedAt() string {
	if o == nil || IsNil(o.ApprovedAt) {
		var ret string
		return ret
	}
	return *o.ApprovedAt
}

// GetApprovedAtOk returns a tuple with the ApprovedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetApprovedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovedAt) {
		return nil, false
	}
	return o.ApprovedAt, true
}

// HasApprovedAt returns a boolean if a field has been set.
func (o *Asset) HasApprovedAt() bool {
	if o != nil && !IsNil(o.ApprovedAt) {
		return true
	}

	return false
}

// SetApprovedAt gets a reference to the given string and assigns it to the ApprovedAt field.
func (o *Asset) SetApprovedAt(v string) {
	o.ApprovedAt = &v
}

// GetName returns the Name field value
func (o *Asset) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Asset) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Asset) SetName(v string) {
	o.Name = v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *Asset) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *Asset) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *Asset) SetSlug(v string) {
	o.Slug = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Asset) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Asset) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Asset) SetDescription(v string) {
	o.Description = &v
}

// GetSource returns the Source field value
func (o *Asset) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *Asset) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *Asset) SetSource(v string) {
	o.Source = v
}

// GetAssetType returns the AssetType field value if set, zero value otherwise.
func (o *Asset) GetAssetType() string {
	if o == nil || IsNil(o.AssetType) {
		var ret string
		return ret
	}
	return *o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetAssetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AssetType) {
		return nil, false
	}
	return o.AssetType, true
}

// HasAssetType returns a boolean if a field has been set.
func (o *Asset) HasAssetType() bool {
	if o != nil && !IsNil(o.AssetType) {
		return true
	}

	return false
}

// SetAssetType gets a reference to the given string and assigns it to the AssetType field.
func (o *Asset) SetAssetType(v string) {
	o.AssetType = &v
}

// GetAssetSchema returns the AssetSchema field value if set, zero value otherwise.
func (o *Asset) GetAssetSchema() string {
	if o == nil || IsNil(o.AssetSchema) {
		var ret string
		return ret
	}
	return *o.AssetSchema
}

// GetAssetSchemaOk returns a tuple with the AssetSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetAssetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.AssetSchema) {
		return nil, false
	}
	return o.AssetSchema, true
}

// HasAssetSchema returns a boolean if a field has been set.
func (o *Asset) HasAssetSchema() bool {
	if o != nil && !IsNil(o.AssetSchema) {
		return true
	}

	return false
}

// SetAssetSchema gets a reference to the given string and assigns it to the AssetSchema field.
func (o *Asset) SetAssetSchema(v string) {
	o.AssetSchema = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *Asset) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *Asset) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *Asset) SetVisibility(v string) {
	o.Visibility = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Asset) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Asset) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *Asset) SetTags(v string) {
	o.Tags = &v
}

// GetSqlLogic returns the SqlLogic field value if set, zero value otherwise.
func (o *Asset) GetSqlLogic() string {
	if o == nil || IsNil(o.SqlLogic) {
		var ret string
		return ret
	}
	return *o.SqlLogic
}

// GetSqlLogicOk returns a tuple with the SqlLogic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetSqlLogicOk() (*string, bool) {
	if o == nil || IsNil(o.SqlLogic) {
		return nil, false
	}
	return o.SqlLogic, true
}

// HasSqlLogic returns a boolean if a field has been set.
func (o *Asset) HasSqlLogic() bool {
	if o != nil && !IsNil(o.SqlLogic) {
		return true
	}

	return false
}

// SetSqlLogic gets a reference to the given string and assigns it to the SqlLogic field.
func (o *Asset) SetSqlLogic(v string) {
	o.SqlLogic = &v
}

// GetSourceSchemaName returns the SourceSchemaName field value if set, zero value otherwise.
func (o *Asset) GetSourceSchemaName() string {
	if o == nil || IsNil(o.SourceSchemaName) {
		var ret string
		return ret
	}
	return *o.SourceSchemaName
}

// GetSourceSchemaNameOk returns a tuple with the SourceSchemaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetSourceSchemaNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceSchemaName) {
		return nil, false
	}
	return o.SourceSchemaName, true
}

// HasSourceSchemaName returns a boolean if a field has been set.
func (o *Asset) HasSourceSchemaName() bool {
	if o != nil && !IsNil(o.SourceSchemaName) {
		return true
	}

	return false
}

// SetSourceSchemaName gets a reference to the given string and assigns it to the SourceSchemaName field.
func (o *Asset) SetSourceSchemaName(v string) {
	o.SourceSchemaName = &v
}

// GetSourceTableName returns the SourceTableName field value if set, zero value otherwise.
func (o *Asset) GetSourceTableName() string {
	if o == nil || IsNil(o.SourceTableName) {
		var ret string
		return ret
	}
	return *o.SourceTableName
}

// GetSourceTableNameOk returns a tuple with the SourceTableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetSourceTableNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceTableName) {
		return nil, false
	}
	return o.SourceTableName, true
}

// HasSourceTableName returns a boolean if a field has been set.
func (o *Asset) HasSourceTableName() bool {
	if o != nil && !IsNil(o.SourceTableName) {
		return true
	}

	return false
}

// SetSourceTableName gets a reference to the given string and assigns it to the SourceTableName field.
func (o *Asset) SetSourceTableName(v string) {
	o.SourceTableName = &v
}

// GetSellInMarketplace returns the SellInMarketplace field value if set, zero value otherwise.
func (o *Asset) GetSellInMarketplace() string {
	if o == nil || IsNil(o.SellInMarketplace) {
		var ret string
		return ret
	}
	return *o.SellInMarketplace
}

// GetSellInMarketplaceOk returns a tuple with the SellInMarketplace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetSellInMarketplaceOk() (*string, bool) {
	if o == nil || IsNil(o.SellInMarketplace) {
		return nil, false
	}
	return o.SellInMarketplace, true
}

// HasSellInMarketplace returns a boolean if a field has been set.
func (o *Asset) HasSellInMarketplace() bool {
	if o != nil && !IsNil(o.SellInMarketplace) {
		return true
	}

	return false
}

// SetSellInMarketplace gets a reference to the given string and assigns it to the SellInMarketplace field.
func (o *Asset) SetSellInMarketplace(v string) {
	o.SellInMarketplace = &v
}

// GetVizChartLibrary returns the VizChartLibrary field value if set, zero value otherwise.
func (o *Asset) GetVizChartLibrary() string {
	if o == nil || IsNil(o.VizChartLibrary) {
		var ret string
		return ret
	}
	return *o.VizChartLibrary
}

// GetVizChartLibraryOk returns a tuple with the VizChartLibrary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVizChartLibraryOk() (*string, bool) {
	if o == nil || IsNil(o.VizChartLibrary) {
		return nil, false
	}
	return o.VizChartLibrary, true
}

// HasVizChartLibrary returns a boolean if a field has been set.
func (o *Asset) HasVizChartLibrary() bool {
	if o != nil && !IsNil(o.VizChartLibrary) {
		return true
	}

	return false
}

// SetVizChartLibrary gets a reference to the given string and assigns it to the VizChartLibrary field.
func (o *Asset) SetVizChartLibrary(v string) {
	o.VizChartLibrary = &v
}

// GetVizChartType returns the VizChartType field value if set, zero value otherwise.
func (o *Asset) GetVizChartType() string {
	if o == nil || IsNil(o.VizChartType) {
		var ret string
		return ret
	}
	return *o.VizChartType
}

// GetVizChartTypeOk returns a tuple with the VizChartType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVizChartTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VizChartType) {
		return nil, false
	}
	return o.VizChartType, true
}

// HasVizChartType returns a boolean if a field has been set.
func (o *Asset) HasVizChartType() bool {
	if o != nil && !IsNil(o.VizChartType) {
		return true
	}

	return false
}

// SetVizChartType gets a reference to the given string and assigns it to the VizChartType field.
func (o *Asset) SetVizChartType(v string) {
	o.VizChartType = &v
}

// GetVizDepVarColName returns the VizDepVarColName field value if set, zero value otherwise.
func (o *Asset) GetVizDepVarColName() string {
	if o == nil || IsNil(o.VizDepVarColName) {
		var ret string
		return ret
	}
	return *o.VizDepVarColName
}

// GetVizDepVarColNameOk returns a tuple with the VizDepVarColName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVizDepVarColNameOk() (*string, bool) {
	if o == nil || IsNil(o.VizDepVarColName) {
		return nil, false
	}
	return o.VizDepVarColName, true
}

// HasVizDepVarColName returns a boolean if a field has been set.
func (o *Asset) HasVizDepVarColName() bool {
	if o != nil && !IsNil(o.VizDepVarColName) {
		return true
	}

	return false
}

// SetVizDepVarColName gets a reference to the given string and assigns it to the VizDepVarColName field.
func (o *Asset) SetVizDepVarColName(v string) {
	o.VizDepVarColName = &v
}

// GetVizIndepVarColName returns the VizIndepVarColName field value if set, zero value otherwise.
func (o *Asset) GetVizIndepVarColName() string {
	if o == nil || IsNil(o.VizIndepVarColName) {
		var ret string
		return ret
	}
	return *o.VizIndepVarColName
}

// GetVizIndepVarColNameOk returns a tuple with the VizIndepVarColName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVizIndepVarColNameOk() (*string, bool) {
	if o == nil || IsNil(o.VizIndepVarColName) {
		return nil, false
	}
	return o.VizIndepVarColName, true
}

// HasVizIndepVarColName returns a boolean if a field has been set.
func (o *Asset) HasVizIndepVarColName() bool {
	if o != nil && !IsNil(o.VizIndepVarColName) {
		return true
	}

	return false
}

// SetVizIndepVarColName gets a reference to the given string and assigns it to the VizIndepVarColName field.
func (o *Asset) SetVizIndepVarColName(v string) {
	o.VizIndepVarColName = &v
}

// GetVizSizeColName returns the VizSizeColName field value if set, zero value otherwise.
func (o *Asset) GetVizSizeColName() string {
	if o == nil || IsNil(o.VizSizeColName) {
		var ret string
		return ret
	}
	return *o.VizSizeColName
}

// GetVizSizeColNameOk returns a tuple with the VizSizeColName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVizSizeColNameOk() (*string, bool) {
	if o == nil || IsNil(o.VizSizeColName) {
		return nil, false
	}
	return o.VizSizeColName, true
}

// HasVizSizeColName returns a boolean if a field has been set.
func (o *Asset) HasVizSizeColName() bool {
	if o != nil && !IsNil(o.VizSizeColName) {
		return true
	}

	return false
}

// SetVizSizeColName gets a reference to the given string and assigns it to the VizSizeColName field.
func (o *Asset) SetVizSizeColName(v string) {
	o.VizSizeColName = &v
}

// GetVizColorColName returns the VizColorColName field value if set, zero value otherwise.
func (o *Asset) GetVizColorColName() string {
	if o == nil || IsNil(o.VizColorColName) {
		var ret string
		return ret
	}
	return *o.VizColorColName
}

// GetVizColorColNameOk returns a tuple with the VizColorColName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVizColorColNameOk() (*string, bool) {
	if o == nil || IsNil(o.VizColorColName) {
		return nil, false
	}
	return o.VizColorColName, true
}

// HasVizColorColName returns a boolean if a field has been set.
func (o *Asset) HasVizColorColName() bool {
	if o != nil && !IsNil(o.VizColorColName) {
		return true
	}

	return false
}

// SetVizColorColName gets a reference to the given string and assigns it to the VizColorColName field.
func (o *Asset) SetVizColorColName(v string) {
	o.VizColorColName = &v
}

// GetVizDataAggregation returns the VizDataAggregation field value if set, zero value otherwise.
func (o *Asset) GetVizDataAggregation() string {
	if o == nil || IsNil(o.VizDataAggregation) {
		var ret string
		return ret
	}
	return *o.VizDataAggregation
}

// GetVizDataAggregationOk returns a tuple with the VizDataAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVizDataAggregationOk() (*string, bool) {
	if o == nil || IsNil(o.VizDataAggregation) {
		return nil, false
	}
	return o.VizDataAggregation, true
}

// HasVizDataAggregation returns a boolean if a field has been set.
func (o *Asset) HasVizDataAggregation() bool {
	if o != nil && !IsNil(o.VizDataAggregation) {
		return true
	}

	return false
}

// SetVizDataAggregation gets a reference to the given string and assigns it to the VizDataAggregation field.
func (o *Asset) SetVizDataAggregation(v string) {
	o.VizDataAggregation = &v
}

// GetVizSortDirection returns the VizSortDirection field value if set, zero value otherwise.
func (o *Asset) GetVizSortDirection() string {
	if o == nil || IsNil(o.VizSortDirection) {
		var ret string
		return ret
	}
	return *o.VizSortDirection
}

// GetVizSortDirectionOk returns a tuple with the VizSortDirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVizSortDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.VizSortDirection) {
		return nil, false
	}
	return o.VizSortDirection, true
}

// HasVizSortDirection returns a boolean if a field has been set.
func (o *Asset) HasVizSortDirection() bool {
	if o != nil && !IsNil(o.VizSortDirection) {
		return true
	}

	return false
}

// SetVizSortDirection gets a reference to the given string and assigns it to the VizSortDirection field.
func (o *Asset) SetVizSortDirection(v string) {
	o.VizSortDirection = &v
}

// GetVizDataLimit returns the VizDataLimit field value if set, zero value otherwise.
func (o *Asset) GetVizDataLimit() string {
	if o == nil || IsNil(o.VizDataLimit) {
		var ret string
		return ret
	}
	return *o.VizDataLimit
}

// GetVizDataLimitOk returns a tuple with the VizDataLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVizDataLimitOk() (*string, bool) {
	if o == nil || IsNil(o.VizDataLimit) {
		return nil, false
	}
	return o.VizDataLimit, true
}

// HasVizDataLimit returns a boolean if a field has been set.
func (o *Asset) HasVizDataLimit() bool {
	if o != nil && !IsNil(o.VizDataLimit) {
		return true
	}

	return false
}

// SetVizDataLimit gets a reference to the given string and assigns it to the VizDataLimit field.
func (o *Asset) SetVizDataLimit(v string) {
	o.VizDataLimit = &v
}

// GetVizColorScheme returns the VizColorScheme field value if set, zero value otherwise.
func (o *Asset) GetVizColorScheme() string {
	if o == nil || IsNil(o.VizColorScheme) {
		var ret string
		return ret
	}
	return *o.VizColorScheme
}

// GetVizColorSchemeOk returns a tuple with the VizColorScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetVizColorSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.VizColorScheme) {
		return nil, false
	}
	return o.VizColorScheme, true
}

// HasVizColorScheme returns a boolean if a field has been set.
func (o *Asset) HasVizColorScheme() bool {
	if o != nil && !IsNil(o.VizColorScheme) {
		return true
	}

	return false
}

// SetVizColorScheme gets a reference to the given string and assigns it to the VizColorScheme field.
func (o *Asset) SetVizColorScheme(v string) {
	o.VizColorScheme = &v
}

// GetAllowParams returns the AllowParams field value if set, zero value otherwise.
func (o *Asset) GetAllowParams() string {
	if o == nil || IsNil(o.AllowParams) {
		var ret string
		return ret
	}
	return *o.AllowParams
}

// GetAllowParamsOk returns a tuple with the AllowParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetAllowParamsOk() (*string, bool) {
	if o == nil || IsNil(o.AllowParams) {
		return nil, false
	}
	return o.AllowParams, true
}

// HasAllowParams returns a boolean if a field has been set.
func (o *Asset) HasAllowParams() bool {
	if o != nil && !IsNil(o.AllowParams) {
		return true
	}

	return false
}

// SetAllowParams gets a reference to the given string and assigns it to the AllowParams field.
func (o *Asset) SetAllowParams(v string) {
	o.AllowParams = &v
}

// GetAcceptTerms returns the AcceptTerms field value if set, zero value otherwise.
func (o *Asset) GetAcceptTerms() string {
	if o == nil || IsNil(o.AcceptTerms) {
		var ret string
		return ret
	}
	return *o.AcceptTerms
}

// GetAcceptTermsOk returns a tuple with the AcceptTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetAcceptTermsOk() (*string, bool) {
	if o == nil || IsNil(o.AcceptTerms) {
		return nil, false
	}
	return o.AcceptTerms, true
}

// HasAcceptTerms returns a boolean if a field has been set.
func (o *Asset) HasAcceptTerms() bool {
	if o != nil && !IsNil(o.AcceptTerms) {
		return true
	}

	return false
}

// SetAcceptTerms gets a reference to the given string and assigns it to the AcceptTerms field.
func (o *Asset) SetAcceptTerms(v string) {
	o.AcceptTerms = &v
}

// GetCached returns the Cached field value if set, zero value otherwise.
func (o *Asset) GetCached() string {
	if o == nil || IsNil(o.Cached) {
		var ret string
		return ret
	}
	return *o.Cached
}

// GetCachedOk returns a tuple with the Cached field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetCachedOk() (*string, bool) {
	if o == nil || IsNil(o.Cached) {
		return nil, false
	}
	return o.Cached, true
}

// HasCached returns a boolean if a field has been set.
func (o *Asset) HasCached() bool {
	if o != nil && !IsNil(o.Cached) {
		return true
	}

	return false
}

// SetCached gets a reference to the given string and assigns it to the Cached field.
func (o *Asset) SetCached(v string) {
	o.Cached = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *Asset) GetSchedule() string {
	if o == nil || IsNil(o.Schedule) {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *Asset) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *Asset) SetSchedule(v string) {
	o.Schedule = &v
}

// GetNextRun returns the NextRun field value if set, zero value otherwise.
func (o *Asset) GetNextRun() string {
	if o == nil || IsNil(o.NextRun) {
		var ret string
		return ret
	}
	return *o.NextRun
}

// GetNextRunOk returns a tuple with the NextRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetNextRunOk() (*string, bool) {
	if o == nil || IsNil(o.NextRun) {
		return nil, false
	}
	return o.NextRun, true
}

// HasNextRun returns a boolean if a field has been set.
func (o *Asset) HasNextRun() bool {
	if o != nil && !IsNil(o.NextRun) {
		return true
	}

	return false
}

// SetNextRun gets a reference to the given string and assigns it to the NextRun field.
func (o *Asset) SetNextRun(v string) {
	o.NextRun = &v
}

// GetDataTimePeriodStart returns the DataTimePeriodStart field value if set, zero value otherwise.
func (o *Asset) GetDataTimePeriodStart() string {
	if o == nil || IsNil(o.DataTimePeriodStart) {
		var ret string
		return ret
	}
	return *o.DataTimePeriodStart
}

// GetDataTimePeriodStartOk returns a tuple with the DataTimePeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetDataTimePeriodStartOk() (*string, bool) {
	if o == nil || IsNil(o.DataTimePeriodStart) {
		return nil, false
	}
	return o.DataTimePeriodStart, true
}

// HasDataTimePeriodStart returns a boolean if a field has been set.
func (o *Asset) HasDataTimePeriodStart() bool {
	if o != nil && !IsNil(o.DataTimePeriodStart) {
		return true
	}

	return false
}

// SetDataTimePeriodStart gets a reference to the given string and assigns it to the DataTimePeriodStart field.
func (o *Asset) SetDataTimePeriodStart(v string) {
	o.DataTimePeriodStart = &v
}

// GetDataTimePeriodEnd returns the DataTimePeriodEnd field value if set, zero value otherwise.
func (o *Asset) GetDataTimePeriodEnd() string {
	if o == nil || IsNil(o.DataTimePeriodEnd) {
		var ret string
		return ret
	}
	return *o.DataTimePeriodEnd
}

// GetDataTimePeriodEndOk returns a tuple with the DataTimePeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetDataTimePeriodEndOk() (*string, bool) {
	if o == nil || IsNil(o.DataTimePeriodEnd) {
		return nil, false
	}
	return o.DataTimePeriodEnd, true
}

// HasDataTimePeriodEnd returns a boolean if a field has been set.
func (o *Asset) HasDataTimePeriodEnd() bool {
	if o != nil && !IsNil(o.DataTimePeriodEnd) {
		return true
	}

	return false
}

// SetDataTimePeriodEnd gets a reference to the given string and assigns it to the DataTimePeriodEnd field.
func (o *Asset) SetDataTimePeriodEnd(v string) {
	o.DataTimePeriodEnd = &v
}

// GetGeographicCoverageType returns the GeographicCoverageType field value if set, zero value otherwise.
func (o *Asset) GetGeographicCoverageType() string {
	if o == nil || IsNil(o.GeographicCoverageType) {
		var ret string
		return ret
	}
	return *o.GeographicCoverageType
}

// GetGeographicCoverageTypeOk returns a tuple with the GeographicCoverageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetGeographicCoverageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GeographicCoverageType) {
		return nil, false
	}
	return o.GeographicCoverageType, true
}

// HasGeographicCoverageType returns a boolean if a field has been set.
func (o *Asset) HasGeographicCoverageType() bool {
	if o != nil && !IsNil(o.GeographicCoverageType) {
		return true
	}

	return false
}

// SetGeographicCoverageType gets a reference to the given string and assigns it to the GeographicCoverageType field.
func (o *Asset) SetGeographicCoverageType(v string) {
	o.GeographicCoverageType = &v
}

// GetGeographicCoverageDetails returns the GeographicCoverageDetails field value if set, zero value otherwise.
func (o *Asset) GetGeographicCoverageDetails() string {
	if o == nil || IsNil(o.GeographicCoverageDetails) {
		var ret string
		return ret
	}
	return *o.GeographicCoverageDetails
}

// GetGeographicCoverageDetailsOk returns a tuple with the GeographicCoverageDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetGeographicCoverageDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.GeographicCoverageDetails) {
		return nil, false
	}
	return o.GeographicCoverageDetails, true
}

// HasGeographicCoverageDetails returns a boolean if a field has been set.
func (o *Asset) HasGeographicCoverageDetails() bool {
	if o != nil && !IsNil(o.GeographicCoverageDetails) {
		return true
	}

	return false
}

// SetGeographicCoverageDetails gets a reference to the given string and assigns it to the GeographicCoverageDetails field.
func (o *Asset) SetGeographicCoverageDetails(v string) {
	o.GeographicCoverageDetails = &v
}

// GetDataSourceRefreshFrequency returns the DataSourceRefreshFrequency field value if set, zero value otherwise.
func (o *Asset) GetDataSourceRefreshFrequency() string {
	if o == nil || IsNil(o.DataSourceRefreshFrequency) {
		var ret string
		return ret
	}
	return *o.DataSourceRefreshFrequency
}

// GetDataSourceRefreshFrequencyOk returns a tuple with the DataSourceRefreshFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetDataSourceRefreshFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.DataSourceRefreshFrequency) {
		return nil, false
	}
	return o.DataSourceRefreshFrequency, true
}

// HasDataSourceRefreshFrequency returns a boolean if a field has been set.
func (o *Asset) HasDataSourceRefreshFrequency() bool {
	if o != nil && !IsNil(o.DataSourceRefreshFrequency) {
		return true
	}

	return false
}

// SetDataSourceRefreshFrequency gets a reference to the given string and assigns it to the DataSourceRefreshFrequency field.
func (o *Asset) SetDataSourceRefreshFrequency(v string) {
	o.DataSourceRefreshFrequency = &v
}

// GetDataSourceLastRefreshed returns the DataSourceLastRefreshed field value if set, zero value otherwise.
func (o *Asset) GetDataSourceLastRefreshed() string {
	if o == nil || IsNil(o.DataSourceLastRefreshed) {
		var ret string
		return ret
	}
	return *o.DataSourceLastRefreshed
}

// GetDataSourceLastRefreshedOk returns a tuple with the DataSourceLastRefreshed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetDataSourceLastRefreshedOk() (*string, bool) {
	if o == nil || IsNil(o.DataSourceLastRefreshed) {
		return nil, false
	}
	return o.DataSourceLastRefreshed, true
}

// HasDataSourceLastRefreshed returns a boolean if a field has been set.
func (o *Asset) HasDataSourceLastRefreshed() bool {
	if o != nil && !IsNil(o.DataSourceLastRefreshed) {
		return true
	}

	return false
}

// SetDataSourceLastRefreshed gets a reference to the given string and assigns it to the DataSourceLastRefreshed field.
func (o *Asset) SetDataSourceLastRefreshed(v string) {
	o.DataSourceLastRefreshed = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *Asset) GetDateCreated() string {
	if o == nil || IsNil(o.DateCreated) {
		var ret string
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetDateCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *Asset) HasDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given string and assigns it to the DateCreated field.
func (o *Asset) SetDateCreated(v string) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Asset) GetLastUpdated() string {
	if o == nil || IsNil(o.LastUpdated) {
		var ret string
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetLastUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *Asset) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given string and assigns it to the LastUpdated field.
func (o *Asset) SetLastUpdated(v string) {
	o.LastUpdated = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *Asset) GetActive() string {
	if o == nil || IsNil(o.Active) {
		var ret string
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Asset) GetActiveOk() (*string, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *Asset) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given string and assigns it to the Active field.
func (o *Asset) SetActive(v string) {
	o.Active = &v
}

func (o Asset) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Asset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssetId) {
		toSerialize["asset_id"] = o.AssetId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	toSerialize["company_id"] = o.CompanyId
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.LlmConnectionId) {
		toSerialize["llm_connection_id"] = o.LlmConnectionId
	}
	if !IsNil(o.SnippetId) {
		toSerialize["snippet_id"] = o.SnippetId
	}
	if !IsNil(o.IndustryId) {
		toSerialize["industry_id"] = o.IndustryId
	}
	if !IsNil(o.AiJobId) {
		toSerialize["ai_job_id"] = o.AiJobId
	}
	if !IsNil(o.ApprovalStatus) {
		toSerialize["approval_status"] = o.ApprovalStatus
	}
	if !IsNil(o.ApprovedByUserId) {
		toSerialize["approved_by_user_id"] = o.ApprovedByUserId
	}
	if !IsNil(o.ApprovedAt) {
		toSerialize["approved_at"] = o.ApprovedAt
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["source"] = o.Source
	if !IsNil(o.AssetType) {
		toSerialize["asset_type"] = o.AssetType
	}
	if !IsNil(o.AssetSchema) {
		toSerialize["asset_schema"] = o.AssetSchema
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.SqlLogic) {
		toSerialize["sql_logic"] = o.SqlLogic
	}
	if !IsNil(o.SourceSchemaName) {
		toSerialize["source_schema_name"] = o.SourceSchemaName
	}
	if !IsNil(o.SourceTableName) {
		toSerialize["source_table_name"] = o.SourceTableName
	}
	if !IsNil(o.SellInMarketplace) {
		toSerialize["sell_in_marketplace"] = o.SellInMarketplace
	}
	if !IsNil(o.VizChartLibrary) {
		toSerialize["viz_chart_library"] = o.VizChartLibrary
	}
	if !IsNil(o.VizChartType) {
		toSerialize["viz_chart_type"] = o.VizChartType
	}
	if !IsNil(o.VizDepVarColName) {
		toSerialize["viz_dep_var_col_name"] = o.VizDepVarColName
	}
	if !IsNil(o.VizIndepVarColName) {
		toSerialize["viz_indep_var_col_name"] = o.VizIndepVarColName
	}
	if !IsNil(o.VizSizeColName) {
		toSerialize["viz_size_col_name"] = o.VizSizeColName
	}
	if !IsNil(o.VizColorColName) {
		toSerialize["viz_color_col_name"] = o.VizColorColName
	}
	if !IsNil(o.VizDataAggregation) {
		toSerialize["viz_data_aggregation"] = o.VizDataAggregation
	}
	if !IsNil(o.VizSortDirection) {
		toSerialize["viz_sort_direction"] = o.VizSortDirection
	}
	if !IsNil(o.VizDataLimit) {
		toSerialize["viz_data_limit"] = o.VizDataLimit
	}
	if !IsNil(o.VizColorScheme) {
		toSerialize["viz_color_scheme"] = o.VizColorScheme
	}
	if !IsNil(o.AllowParams) {
		toSerialize["allow_params"] = o.AllowParams
	}
	if !IsNil(o.AcceptTerms) {
		toSerialize["accept_terms"] = o.AcceptTerms
	}
	if !IsNil(o.Cached) {
		toSerialize["cached"] = o.Cached
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.NextRun) {
		toSerialize["next_run"] = o.NextRun
	}
	if !IsNil(o.DataTimePeriodStart) {
		toSerialize["data_time_period_start"] = o.DataTimePeriodStart
	}
	if !IsNil(o.DataTimePeriodEnd) {
		toSerialize["data_time_period_end"] = o.DataTimePeriodEnd
	}
	if !IsNil(o.GeographicCoverageType) {
		toSerialize["geographic_coverage_type"] = o.GeographicCoverageType
	}
	if !IsNil(o.GeographicCoverageDetails) {
		toSerialize["geographic_coverage_details"] = o.GeographicCoverageDetails
	}
	if !IsNil(o.DataSourceRefreshFrequency) {
		toSerialize["data_source_refresh_frequency"] = o.DataSourceRefreshFrequency
	}
	if !IsNil(o.DataSourceLastRefreshed) {
		toSerialize["data_source_last_refreshed"] = o.DataSourceLastRefreshed
	}
	if !IsNil(o.DateCreated) {
		toSerialize["date_created"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["last_updated"] = o.LastUpdated
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	return toSerialize, nil
}

func (o *Asset) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"company_id",
		"name",
		"source",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAsset := _Asset{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAsset)

	if err != nil {
		return err
	}

	*o = Asset(varAsset)

	return err
}

type NullableAsset struct {
	value *Asset
	isSet bool
}

func (v NullableAsset) Get() *Asset {
	return v.value
}

func (v *NullableAsset) Set(val *Asset) {
	v.value = val
	v.isSet = true
}

func (v NullableAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAsset(val *Asset) *NullableAsset {
	return &NullableAsset{value: val, isSet: true}
}

func (v NullableAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


