/*
Spartera API Documentation

Auto-generated API documentation for REST services of the Spartera platform

API version: 1.24.0
Contact: support@spartera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sparteraapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData{}

// CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData struct for CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData
type CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData struct {
	// ID of the deleted api_keys
	ApiKeyId string `json:"api_key_id"`
}

type _CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData

// NewCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData instantiates a new CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData(apiKeyId string) *CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData {
	this := CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData{}
	this.ApiKeyId = apiKeyId
	return &this
}

// NewCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseDataWithDefaults instantiates a new CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseDataWithDefaults() *CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData {
	this := CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData{}
	return &this
}

// GetApiKeyId returns the ApiKeyId field value
func (o *CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) GetApiKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKeyId
}

// GetApiKeyIdOk returns a tuple with the ApiKeyId field value
// and a boolean to check if the value has been set.
func (o *CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) GetApiKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKeyId, true
}

// SetApiKeyId sets field value
func (o *CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) SetApiKeyId(v string) {
	o.ApiKeyId = v
}

func (o CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_key_id"] = o.ApiKeyId
	return toSerialize, nil
}

func (o *CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"api_key_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData := _CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData)

	if err != nil {
		return err
	}

	*o = CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData(varCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData)

	return err
}

type NullableCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData struct {
	value *CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData
	isSet bool
}

func (v NullableCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) Get() *CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData {
	return v.value
}

func (v *NullableCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) Set(val *CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData(val *CompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) *NullableCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData {
	return &NullableCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData{value: val, isSet: true}
}

func (v NullableCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompaniesCompanyIdApiKeysApiKeyIdDelete200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


