/*
Spartera API Documentation

Auto-generated API documentation for REST services of the Spartera platform

API version: 1.24.0
Contact: support@spartera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sparteraapi

import (
	"encoding/json"
)

// checks if the CompaniesUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompaniesUpdate{}

// CompaniesUpdate Update schema for modifying Company
type CompaniesUpdate struct {
	IndustryId *int64 `json:"industry_id,omitempty"`
	CountryId *int64 `json:"country_id,omitempty"`
	CompanyName *string `json:"company_name,omitempty"`
	CompanyDescription *string `json:"company_description,omitempty"`
	CompanyHandle *string `json:"company_handle,omitempty"`
	CompanyDomain *string `json:"company_domain,omitempty"`
	// Current balance of credits for this company (buyer)
	CreditsBalance *int64 `json:"credits_balance,omitempty"`
	AcceptedEula *bool `json:"accepted_eula,omitempty"`
	// Stripe Connect account ID for marketplace sellers
	StripeAccountId *string `json:"stripe_account_id,omitempty"`
	// Status of the Stripe account (verified, pending, etc.)
	StripeAccountStatus *string `json:"stripe_account_status,omitempty"`
}

// NewCompaniesUpdate instantiates a new CompaniesUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompaniesUpdate() *CompaniesUpdate {
	this := CompaniesUpdate{}
	return &this
}

// NewCompaniesUpdateWithDefaults instantiates a new CompaniesUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompaniesUpdateWithDefaults() *CompaniesUpdate {
	this := CompaniesUpdate{}
	return &this
}

// GetIndustryId returns the IndustryId field value if set, zero value otherwise.
func (o *CompaniesUpdate) GetIndustryId() int64 {
	if o == nil || IsNil(o.IndustryId) {
		var ret int64
		return ret
	}
	return *o.IndustryId
}

// GetIndustryIdOk returns a tuple with the IndustryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesUpdate) GetIndustryIdOk() (*int64, bool) {
	if o == nil || IsNil(o.IndustryId) {
		return nil, false
	}
	return o.IndustryId, true
}

// HasIndustryId returns a boolean if a field has been set.
func (o *CompaniesUpdate) HasIndustryId() bool {
	if o != nil && !IsNil(o.IndustryId) {
		return true
	}

	return false
}

// SetIndustryId gets a reference to the given int64 and assigns it to the IndustryId field.
func (o *CompaniesUpdate) SetIndustryId(v int64) {
	o.IndustryId = &v
}

// GetCountryId returns the CountryId field value if set, zero value otherwise.
func (o *CompaniesUpdate) GetCountryId() int64 {
	if o == nil || IsNil(o.CountryId) {
		var ret int64
		return ret
	}
	return *o.CountryId
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesUpdate) GetCountryIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CountryId) {
		return nil, false
	}
	return o.CountryId, true
}

// HasCountryId returns a boolean if a field has been set.
func (o *CompaniesUpdate) HasCountryId() bool {
	if o != nil && !IsNil(o.CountryId) {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given int64 and assigns it to the CountryId field.
func (o *CompaniesUpdate) SetCountryId(v int64) {
	o.CountryId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *CompaniesUpdate) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesUpdate) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *CompaniesUpdate) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *CompaniesUpdate) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCompanyDescription returns the CompanyDescription field value if set, zero value otherwise.
func (o *CompaniesUpdate) GetCompanyDescription() string {
	if o == nil || IsNil(o.CompanyDescription) {
		var ret string
		return ret
	}
	return *o.CompanyDescription
}

// GetCompanyDescriptionOk returns a tuple with the CompanyDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesUpdate) GetCompanyDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyDescription) {
		return nil, false
	}
	return o.CompanyDescription, true
}

// HasCompanyDescription returns a boolean if a field has been set.
func (o *CompaniesUpdate) HasCompanyDescription() bool {
	if o != nil && !IsNil(o.CompanyDescription) {
		return true
	}

	return false
}

// SetCompanyDescription gets a reference to the given string and assigns it to the CompanyDescription field.
func (o *CompaniesUpdate) SetCompanyDescription(v string) {
	o.CompanyDescription = &v
}

// GetCompanyHandle returns the CompanyHandle field value if set, zero value otherwise.
func (o *CompaniesUpdate) GetCompanyHandle() string {
	if o == nil || IsNil(o.CompanyHandle) {
		var ret string
		return ret
	}
	return *o.CompanyHandle
}

// GetCompanyHandleOk returns a tuple with the CompanyHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesUpdate) GetCompanyHandleOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyHandle) {
		return nil, false
	}
	return o.CompanyHandle, true
}

// HasCompanyHandle returns a boolean if a field has been set.
func (o *CompaniesUpdate) HasCompanyHandle() bool {
	if o != nil && !IsNil(o.CompanyHandle) {
		return true
	}

	return false
}

// SetCompanyHandle gets a reference to the given string and assigns it to the CompanyHandle field.
func (o *CompaniesUpdate) SetCompanyHandle(v string) {
	o.CompanyHandle = &v
}

// GetCompanyDomain returns the CompanyDomain field value if set, zero value otherwise.
func (o *CompaniesUpdate) GetCompanyDomain() string {
	if o == nil || IsNil(o.CompanyDomain) {
		var ret string
		return ret
	}
	return *o.CompanyDomain
}

// GetCompanyDomainOk returns a tuple with the CompanyDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesUpdate) GetCompanyDomainOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyDomain) {
		return nil, false
	}
	return o.CompanyDomain, true
}

// HasCompanyDomain returns a boolean if a field has been set.
func (o *CompaniesUpdate) HasCompanyDomain() bool {
	if o != nil && !IsNil(o.CompanyDomain) {
		return true
	}

	return false
}

// SetCompanyDomain gets a reference to the given string and assigns it to the CompanyDomain field.
func (o *CompaniesUpdate) SetCompanyDomain(v string) {
	o.CompanyDomain = &v
}

// GetCreditsBalance returns the CreditsBalance field value if set, zero value otherwise.
func (o *CompaniesUpdate) GetCreditsBalance() int64 {
	if o == nil || IsNil(o.CreditsBalance) {
		var ret int64
		return ret
	}
	return *o.CreditsBalance
}

// GetCreditsBalanceOk returns a tuple with the CreditsBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesUpdate) GetCreditsBalanceOk() (*int64, bool) {
	if o == nil || IsNil(o.CreditsBalance) {
		return nil, false
	}
	return o.CreditsBalance, true
}

// HasCreditsBalance returns a boolean if a field has been set.
func (o *CompaniesUpdate) HasCreditsBalance() bool {
	if o != nil && !IsNil(o.CreditsBalance) {
		return true
	}

	return false
}

// SetCreditsBalance gets a reference to the given int64 and assigns it to the CreditsBalance field.
func (o *CompaniesUpdate) SetCreditsBalance(v int64) {
	o.CreditsBalance = &v
}

// GetAcceptedEula returns the AcceptedEula field value if set, zero value otherwise.
func (o *CompaniesUpdate) GetAcceptedEula() bool {
	if o == nil || IsNil(o.AcceptedEula) {
		var ret bool
		return ret
	}
	return *o.AcceptedEula
}

// GetAcceptedEulaOk returns a tuple with the AcceptedEula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesUpdate) GetAcceptedEulaOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptedEula) {
		return nil, false
	}
	return o.AcceptedEula, true
}

// HasAcceptedEula returns a boolean if a field has been set.
func (o *CompaniesUpdate) HasAcceptedEula() bool {
	if o != nil && !IsNil(o.AcceptedEula) {
		return true
	}

	return false
}

// SetAcceptedEula gets a reference to the given bool and assigns it to the AcceptedEula field.
func (o *CompaniesUpdate) SetAcceptedEula(v bool) {
	o.AcceptedEula = &v
}

// GetStripeAccountId returns the StripeAccountId field value if set, zero value otherwise.
func (o *CompaniesUpdate) GetStripeAccountId() string {
	if o == nil || IsNil(o.StripeAccountId) {
		var ret string
		return ret
	}
	return *o.StripeAccountId
}

// GetStripeAccountIdOk returns a tuple with the StripeAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesUpdate) GetStripeAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeAccountId) {
		return nil, false
	}
	return o.StripeAccountId, true
}

// HasStripeAccountId returns a boolean if a field has been set.
func (o *CompaniesUpdate) HasStripeAccountId() bool {
	if o != nil && !IsNil(o.StripeAccountId) {
		return true
	}

	return false
}

// SetStripeAccountId gets a reference to the given string and assigns it to the StripeAccountId field.
func (o *CompaniesUpdate) SetStripeAccountId(v string) {
	o.StripeAccountId = &v
}

// GetStripeAccountStatus returns the StripeAccountStatus field value if set, zero value otherwise.
func (o *CompaniesUpdate) GetStripeAccountStatus() string {
	if o == nil || IsNil(o.StripeAccountStatus) {
		var ret string
		return ret
	}
	return *o.StripeAccountStatus
}

// GetStripeAccountStatusOk returns a tuple with the StripeAccountStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesUpdate) GetStripeAccountStatusOk() (*string, bool) {
	if o == nil || IsNil(o.StripeAccountStatus) {
		return nil, false
	}
	return o.StripeAccountStatus, true
}

// HasStripeAccountStatus returns a boolean if a field has been set.
func (o *CompaniesUpdate) HasStripeAccountStatus() bool {
	if o != nil && !IsNil(o.StripeAccountStatus) {
		return true
	}

	return false
}

// SetStripeAccountStatus gets a reference to the given string and assigns it to the StripeAccountStatus field.
func (o *CompaniesUpdate) SetStripeAccountStatus(v string) {
	o.StripeAccountStatus = &v
}

func (o CompaniesUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompaniesUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IndustryId) {
		toSerialize["industry_id"] = o.IndustryId
	}
	if !IsNil(o.CountryId) {
		toSerialize["country_id"] = o.CountryId
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.CompanyDescription) {
		toSerialize["company_description"] = o.CompanyDescription
	}
	if !IsNil(o.CompanyHandle) {
		toSerialize["company_handle"] = o.CompanyHandle
	}
	if !IsNil(o.CompanyDomain) {
		toSerialize["company_domain"] = o.CompanyDomain
	}
	if !IsNil(o.CreditsBalance) {
		toSerialize["credits_balance"] = o.CreditsBalance
	}
	if !IsNil(o.AcceptedEula) {
		toSerialize["accepted_eula"] = o.AcceptedEula
	}
	if !IsNil(o.StripeAccountId) {
		toSerialize["stripe_account_id"] = o.StripeAccountId
	}
	if !IsNil(o.StripeAccountStatus) {
		toSerialize["stripe_account_status"] = o.StripeAccountStatus
	}
	return toSerialize, nil
}

type NullableCompaniesUpdate struct {
	value *CompaniesUpdate
	isSet bool
}

func (v NullableCompaniesUpdate) Get() *CompaniesUpdate {
	return v.value
}

func (v *NullableCompaniesUpdate) Set(val *CompaniesUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableCompaniesUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableCompaniesUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompaniesUpdate(val *CompaniesUpdate) *NullableCompaniesUpdate {
	return &NullableCompaniesUpdate{value: val, isSet: true}
}

func (v NullableCompaniesUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompaniesUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


