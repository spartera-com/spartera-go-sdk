/*
Spartera API Documentation

Auto-generated API documentation for REST services of the Spartera platform

API version: 1.24.0
Contact: support@spartera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sparteraapi

import (
	"encoding/json"
)

// checks if the AlertsUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertsUpdate{}

// AlertsUpdate Update schema for modifying Alert
type AlertsUpdate struct {
	AssetId *string `json:"asset_id,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	CompanyId *string `json:"company_id,omitempty"`
	// Whether this alert is currently active
	IsActive *bool `json:"is_active,omitempty"`
}

// NewAlertsUpdate instantiates a new AlertsUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertsUpdate() *AlertsUpdate {
	this := AlertsUpdate{}
	return &this
}

// NewAlertsUpdateWithDefaults instantiates a new AlertsUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertsUpdateWithDefaults() *AlertsUpdate {
	this := AlertsUpdate{}
	return &this
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *AlertsUpdate) GetAssetId() string {
	if o == nil || IsNil(o.AssetId) {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertsUpdate) GetAssetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssetId) {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *AlertsUpdate) HasAssetId() bool {
	if o != nil && !IsNil(o.AssetId) {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *AlertsUpdate) SetAssetId(v string) {
	o.AssetId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AlertsUpdate) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertsUpdate) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AlertsUpdate) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *AlertsUpdate) SetUserId(v string) {
	o.UserId = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *AlertsUpdate) GetCompanyId() string {
	if o == nil || IsNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertsUpdate) GetCompanyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *AlertsUpdate) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *AlertsUpdate) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *AlertsUpdate) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertsUpdate) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *AlertsUpdate) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *AlertsUpdate) SetIsActive(v bool) {
	o.IsActive = &v
}

func (o AlertsUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertsUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssetId) {
		toSerialize["asset_id"] = o.AssetId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	if !IsNil(o.IsActive) {
		toSerialize["is_active"] = o.IsActive
	}
	return toSerialize, nil
}

type NullableAlertsUpdate struct {
	value *AlertsUpdate
	isSet bool
}

func (v NullableAlertsUpdate) Get() *AlertsUpdate {
	return v.value
}

func (v *NullableAlertsUpdate) Set(val *AlertsUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertsUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertsUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertsUpdate(val *AlertsUpdate) *NullableAlertsUpdate {
	return &NullableAlertsUpdate{value: val, isSet: true}
}

func (v NullableAlertsUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertsUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


