/*
Spartera API Documentation

Auto-generated API documentation for REST services of the Spartera platform

API version: 1.24.0
Contact: support@spartera.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sparteraapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CompaniesInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompaniesInput{}

// CompaniesInput Input schema for creating Company
type CompaniesInput struct {
	IndustryId *int64 `json:"industry_id,omitempty"`
	CountryId *int64 `json:"country_id,omitempty"`
	CompanyName *string `json:"company_name,omitempty"`
	CompanyDescription *string `json:"company_description,omitempty"`
	CompanyHandle string `json:"company_handle"`
	CompanyDomain string `json:"company_domain"`
	// Current balance of credits for this company (buyer)
	CreditsBalance *int64 `json:"credits_balance,omitempty"`
	AcceptedEula *bool `json:"accepted_eula,omitempty"`
	// Stripe Connect account ID for marketplace sellers
	StripeAccountId *string `json:"stripe_account_id,omitempty"`
	// Status of the Stripe account (verified, pending, etc.)
	StripeAccountStatus *string `json:"stripe_account_status,omitempty"`
}

type _CompaniesInput CompaniesInput

// NewCompaniesInput instantiates a new CompaniesInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompaniesInput(companyHandle string, companyDomain string) *CompaniesInput {
	this := CompaniesInput{}
	this.CompanyHandle = companyHandle
	this.CompanyDomain = companyDomain
	return &this
}

// NewCompaniesInputWithDefaults instantiates a new CompaniesInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompaniesInputWithDefaults() *CompaniesInput {
	this := CompaniesInput{}
	return &this
}

// GetIndustryId returns the IndustryId field value if set, zero value otherwise.
func (o *CompaniesInput) GetIndustryId() int64 {
	if o == nil || IsNil(o.IndustryId) {
		var ret int64
		return ret
	}
	return *o.IndustryId
}

// GetIndustryIdOk returns a tuple with the IndustryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesInput) GetIndustryIdOk() (*int64, bool) {
	if o == nil || IsNil(o.IndustryId) {
		return nil, false
	}
	return o.IndustryId, true
}

// HasIndustryId returns a boolean if a field has been set.
func (o *CompaniesInput) HasIndustryId() bool {
	if o != nil && !IsNil(o.IndustryId) {
		return true
	}

	return false
}

// SetIndustryId gets a reference to the given int64 and assigns it to the IndustryId field.
func (o *CompaniesInput) SetIndustryId(v int64) {
	o.IndustryId = &v
}

// GetCountryId returns the CountryId field value if set, zero value otherwise.
func (o *CompaniesInput) GetCountryId() int64 {
	if o == nil || IsNil(o.CountryId) {
		var ret int64
		return ret
	}
	return *o.CountryId
}

// GetCountryIdOk returns a tuple with the CountryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesInput) GetCountryIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CountryId) {
		return nil, false
	}
	return o.CountryId, true
}

// HasCountryId returns a boolean if a field has been set.
func (o *CompaniesInput) HasCountryId() bool {
	if o != nil && !IsNil(o.CountryId) {
		return true
	}

	return false
}

// SetCountryId gets a reference to the given int64 and assigns it to the CountryId field.
func (o *CompaniesInput) SetCountryId(v int64) {
	o.CountryId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *CompaniesInput) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesInput) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *CompaniesInput) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *CompaniesInput) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCompanyDescription returns the CompanyDescription field value if set, zero value otherwise.
func (o *CompaniesInput) GetCompanyDescription() string {
	if o == nil || IsNil(o.CompanyDescription) {
		var ret string
		return ret
	}
	return *o.CompanyDescription
}

// GetCompanyDescriptionOk returns a tuple with the CompanyDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesInput) GetCompanyDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyDescription) {
		return nil, false
	}
	return o.CompanyDescription, true
}

// HasCompanyDescription returns a boolean if a field has been set.
func (o *CompaniesInput) HasCompanyDescription() bool {
	if o != nil && !IsNil(o.CompanyDescription) {
		return true
	}

	return false
}

// SetCompanyDescription gets a reference to the given string and assigns it to the CompanyDescription field.
func (o *CompaniesInput) SetCompanyDescription(v string) {
	o.CompanyDescription = &v
}

// GetCompanyHandle returns the CompanyHandle field value
func (o *CompaniesInput) GetCompanyHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyHandle
}

// GetCompanyHandleOk returns a tuple with the CompanyHandle field value
// and a boolean to check if the value has been set.
func (o *CompaniesInput) GetCompanyHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyHandle, true
}

// SetCompanyHandle sets field value
func (o *CompaniesInput) SetCompanyHandle(v string) {
	o.CompanyHandle = v
}

// GetCompanyDomain returns the CompanyDomain field value
func (o *CompaniesInput) GetCompanyDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyDomain
}

// GetCompanyDomainOk returns a tuple with the CompanyDomain field value
// and a boolean to check if the value has been set.
func (o *CompaniesInput) GetCompanyDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyDomain, true
}

// SetCompanyDomain sets field value
func (o *CompaniesInput) SetCompanyDomain(v string) {
	o.CompanyDomain = v
}

// GetCreditsBalance returns the CreditsBalance field value if set, zero value otherwise.
func (o *CompaniesInput) GetCreditsBalance() int64 {
	if o == nil || IsNil(o.CreditsBalance) {
		var ret int64
		return ret
	}
	return *o.CreditsBalance
}

// GetCreditsBalanceOk returns a tuple with the CreditsBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesInput) GetCreditsBalanceOk() (*int64, bool) {
	if o == nil || IsNil(o.CreditsBalance) {
		return nil, false
	}
	return o.CreditsBalance, true
}

// HasCreditsBalance returns a boolean if a field has been set.
func (o *CompaniesInput) HasCreditsBalance() bool {
	if o != nil && !IsNil(o.CreditsBalance) {
		return true
	}

	return false
}

// SetCreditsBalance gets a reference to the given int64 and assigns it to the CreditsBalance field.
func (o *CompaniesInput) SetCreditsBalance(v int64) {
	o.CreditsBalance = &v
}

// GetAcceptedEula returns the AcceptedEula field value if set, zero value otherwise.
func (o *CompaniesInput) GetAcceptedEula() bool {
	if o == nil || IsNil(o.AcceptedEula) {
		var ret bool
		return ret
	}
	return *o.AcceptedEula
}

// GetAcceptedEulaOk returns a tuple with the AcceptedEula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesInput) GetAcceptedEulaOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptedEula) {
		return nil, false
	}
	return o.AcceptedEula, true
}

// HasAcceptedEula returns a boolean if a field has been set.
func (o *CompaniesInput) HasAcceptedEula() bool {
	if o != nil && !IsNil(o.AcceptedEula) {
		return true
	}

	return false
}

// SetAcceptedEula gets a reference to the given bool and assigns it to the AcceptedEula field.
func (o *CompaniesInput) SetAcceptedEula(v bool) {
	o.AcceptedEula = &v
}

// GetStripeAccountId returns the StripeAccountId field value if set, zero value otherwise.
func (o *CompaniesInput) GetStripeAccountId() string {
	if o == nil || IsNil(o.StripeAccountId) {
		var ret string
		return ret
	}
	return *o.StripeAccountId
}

// GetStripeAccountIdOk returns a tuple with the StripeAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesInput) GetStripeAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeAccountId) {
		return nil, false
	}
	return o.StripeAccountId, true
}

// HasStripeAccountId returns a boolean if a field has been set.
func (o *CompaniesInput) HasStripeAccountId() bool {
	if o != nil && !IsNil(o.StripeAccountId) {
		return true
	}

	return false
}

// SetStripeAccountId gets a reference to the given string and assigns it to the StripeAccountId field.
func (o *CompaniesInput) SetStripeAccountId(v string) {
	o.StripeAccountId = &v
}

// GetStripeAccountStatus returns the StripeAccountStatus field value if set, zero value otherwise.
func (o *CompaniesInput) GetStripeAccountStatus() string {
	if o == nil || IsNil(o.StripeAccountStatus) {
		var ret string
		return ret
	}
	return *o.StripeAccountStatus
}

// GetStripeAccountStatusOk returns a tuple with the StripeAccountStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompaniesInput) GetStripeAccountStatusOk() (*string, bool) {
	if o == nil || IsNil(o.StripeAccountStatus) {
		return nil, false
	}
	return o.StripeAccountStatus, true
}

// HasStripeAccountStatus returns a boolean if a field has been set.
func (o *CompaniesInput) HasStripeAccountStatus() bool {
	if o != nil && !IsNil(o.StripeAccountStatus) {
		return true
	}

	return false
}

// SetStripeAccountStatus gets a reference to the given string and assigns it to the StripeAccountStatus field.
func (o *CompaniesInput) SetStripeAccountStatus(v string) {
	o.StripeAccountStatus = &v
}

func (o CompaniesInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompaniesInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IndustryId) {
		toSerialize["industry_id"] = o.IndustryId
	}
	if !IsNil(o.CountryId) {
		toSerialize["country_id"] = o.CountryId
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.CompanyDescription) {
		toSerialize["company_description"] = o.CompanyDescription
	}
	toSerialize["company_handle"] = o.CompanyHandle
	toSerialize["company_domain"] = o.CompanyDomain
	if !IsNil(o.CreditsBalance) {
		toSerialize["credits_balance"] = o.CreditsBalance
	}
	if !IsNil(o.AcceptedEula) {
		toSerialize["accepted_eula"] = o.AcceptedEula
	}
	if !IsNil(o.StripeAccountId) {
		toSerialize["stripe_account_id"] = o.StripeAccountId
	}
	if !IsNil(o.StripeAccountStatus) {
		toSerialize["stripe_account_status"] = o.StripeAccountStatus
	}
	return toSerialize, nil
}

func (o *CompaniesInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"company_handle",
		"company_domain",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompaniesInput := _CompaniesInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompaniesInput)

	if err != nil {
		return err
	}

	*o = CompaniesInput(varCompaniesInput)

	return err
}

type NullableCompaniesInput struct {
	value *CompaniesInput
	isSet bool
}

func (v NullableCompaniesInput) Get() *CompaniesInput {
	return v.value
}

func (v *NullableCompaniesInput) Set(val *CompaniesInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCompaniesInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCompaniesInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompaniesInput(val *CompaniesInput) *NullableCompaniesInput {
	return &NullableCompaniesInput{value: val, isSet: true}
}

func (v NullableCompaniesInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompaniesInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


